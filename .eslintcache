[{"C:\\Users\\shash\\front_bootstrap\\src\\components\\Notifications.js":"1","C:\\Users\\shash\\front_bootstrap\\src\\components\\Profile.js":"2","C:\\Users\\shash\\front_bootstrap\\src\\components\\Followers.js":"3","C:\\Users\\shash\\front_bootstrap\\src\\components\\Posts.js":"4","C:\\Users\\shash\\front_bootstrap\\src\\components\\Following.js":"5","C:\\Users\\shash\\front_bootstrap\\src\\index.js":"6","C:\\Users\\shash\\front_bootstrap\\src\\App.js":"7","C:\\Users\\shash\\front_bootstrap\\src\\reportWebVitals.js":"8","C:\\Users\\shash\\front_bootstrap\\src\\components\\Comment.js":"9","C:\\Users\\shash\\front_bootstrap\\src\\components\\SearchBox.js":"10","C:\\Users\\shash\\front_bootstrap\\src\\components\\SignUp.js":"11","C:\\Users\\shash\\front_bootstrap\\src\\components\\SecondUser.js":"12","C:\\Users\\shash\\front_bootstrap\\src\\SwipeDrawer.js":"13","C:\\Users\\shash\\front_bootstrap\\src\\Routes.js":"14","C:\\Users\\shash\\front_bootstrap\\src\\components\\ViewPost.js":"15","C:\\Users\\shash\\front_bootstrap\\src\\components\\PopularGenres.js":"16","C:\\Users\\shash\\front_bootstrap\\src\\axios.js":"17","C:\\Users\\shash\\front_bootstrap\\src\\components\\SignIn.js":"18","C:\\Users\\shash\\front_bootstrap\\src\\context\\UserContext.js":"19","C:\\Users\\shash\\front_bootstrap\\src\\components\\ErrorNotice.js":"20","C:\\Users\\shash\\front_bootstrap\\src\\components\\Settings.js":"21","C:\\Users\\shash\\front_bootstrap\\src\\components\\CommentReply.js":"22","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreatePost.js":"23","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateComment.js":"24","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateCommentReply.js":"25","C:\\Users\\shash\\front_bootstrap\\src\\components\\Join\\Join.js":"26","C:\\Users\\shash\\front_bootstrap\\src\\components\\InfoBar\\InfoBar.js":"27","C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Messages.js":"28","C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Message\\Message.js":"29","C:\\Users\\shash\\front_bootstrap\\src\\components\\Input\\Input.js":"30","C:\\Users\\shash\\front_bootstrap\\src\\components\\Chat\\Chat.js":"31","C:\\Users\\shash\\front_bootstrap\\src\\components\\Post.js":"32","C:\\Users\\shash\\front_bootstrap\\src\\components\\Notification.js":"33","C:\\Users\\shash\\front_bootstrap\\src\\components\\Reviews.js":"34","C:\\Users\\shash\\front_bootstrap\\src\\components\\Stories.js":"35","C:\\Users\\shash\\front_bootstrap\\src\\components\\Summaries.js":"36","C:\\Users\\shash\\front_bootstrap\\src\\components\\Poems.js":"37","C:\\Users\\shash\\front_bootstrap\\src\\components\\Analysis.js":"38","C:\\Users\\shash\\front_bootstrap\\src\\components\\ProfileTab.js":"39","C:\\Users\\shash\\front_bootstrap\\src\\components\\Home.js":"40","C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\components\\Player.js":"41","C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\MyAudioPlayer.js":"42","C:\\Users\\shash\\front_bootstrap\\src\\base.js":"43","C:\\Users\\shash\\front_bootstrap\\src\\components\\UserComments.js":"44"},{"size":4139,"mtime":1612596492149,"results":"45","hashOfConfig":"46"},{"size":5913,"mtime":1615718495961,"results":"47","hashOfConfig":"46"},{"size":6212,"mtime":1615721996095,"results":"48","hashOfConfig":"46"},{"size":5333,"mtime":1615818803862,"results":"49","hashOfConfig":"46"},{"size":5952,"mtime":1615722001759,"results":"50","hashOfConfig":"46"},{"size":587,"mtime":1607347923720,"results":"51","hashOfConfig":"46"},{"size":1611,"mtime":1612621417682,"results":"52","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"46"},{"size":3615,"mtime":1615717073766,"results":"54","hashOfConfig":"46"},{"size":4871,"mtime":1615743171354,"results":"55","hashOfConfig":"46"},{"size":7274,"mtime":1613302704677,"results":"56","hashOfConfig":"46"},{"size":10683,"mtime":1615720389324,"results":"57","hashOfConfig":"46"},{"size":18440,"mtime":1615738798632,"results":"58","hashOfConfig":"46"},{"size":2753,"mtime":1613313290280,"results":"59","hashOfConfig":"46"},{"size":12249,"mtime":1613325983523,"results":"60","hashOfConfig":"46"},{"size":1641,"mtime":1612716139028,"results":"61","hashOfConfig":"46"},{"size":144,"mtime":1612342747576,"results":"62","hashOfConfig":"46"},{"size":4150,"mtime":1613302704741,"results":"63","hashOfConfig":"46"},{"size":79,"mtime":1608390502629,"results":"64","hashOfConfig":"46"},{"size":174,"mtime":1608666149887,"results":"65","hashOfConfig":"46"},{"size":6368,"mtime":1615821343169,"results":"66","hashOfConfig":"46"},{"size":2337,"mtime":1615717073427,"results":"67","hashOfConfig":"46"},{"size":7770,"mtime":1615721684055,"results":"68","hashOfConfig":"46"},{"size":1069,"mtime":1615634164632,"results":"69","hashOfConfig":"46"},{"size":1020,"mtime":1613501769455,"results":"70","hashOfConfig":"46"},{"size":2156,"mtime":1612951154233,"results":"71","hashOfConfig":"46"},{"size":601,"mtime":1611385762713,"results":"72","hashOfConfig":"46"},{"size":2049,"mtime":1612342735733,"results":"73","hashOfConfig":"46"},{"size":1020,"mtime":1611408697645,"results":"74","hashOfConfig":"46"},{"size":541,"mtime":1611338007504,"results":"75","hashOfConfig":"46"},{"size":2410,"mtime":1612360514476,"results":"76","hashOfConfig":"46"},{"size":8620,"mtime":1618428264336,"results":"77","hashOfConfig":"46"},{"size":1431,"mtime":1612588699368,"results":"78","hashOfConfig":"46"},{"size":535,"mtime":1615658412467,"results":"79","hashOfConfig":"46"},{"size":532,"mtime":1615659539665,"results":"80","hashOfConfig":"46"},{"size":540,"mtime":1615658351992,"results":"81","hashOfConfig":"46"},{"size":529,"mtime":1615659632482,"results":"82","hashOfConfig":"46"},{"size":537,"mtime":1615658512724,"results":"83","hashOfConfig":"46"},{"size":362,"mtime":1612952683736,"results":"84","hashOfConfig":"46"},{"size":508,"mtime":1615658918090,"results":"85","hashOfConfig":"46"},{"size":3559,"mtime":1613313537082,"results":"86","hashOfConfig":"46"},{"size":2298,"mtime":1618432318559,"results":"87","hashOfConfig":"46"},{"size":461,"mtime":1613287966132,"results":"88","hashOfConfig":"46"},{"size":2663,"mtime":1615743558963,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"1vj7ngk",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"C:\\Users\\shash\\front_bootstrap\\src\\components\\Notifications.js",["196"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport Notification from \"./Notification\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Badge,\r\n  Toast,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Notifications = () => {\r\n  const { userData } = useContext(UserContext);\r\n  const [recentChats, setRecentChats] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [value, setValue] = useState([1, 3]);\r\n  const [badge, setBadge] = useState(0);\r\n  const [notification, setNotification] = useState([]);\r\n  useEffect(() => {\r\n    if (userData.user) {\r\n      setRecentChats(\r\n        userData.user.followers.filter(\r\n          (username) => username && userData.user.following.includes(username)\r\n        )\r\n      );\r\n    }\r\n  }, [userData.user]);\r\n\r\n  const hashGenerator = (user) => {\r\n    let hash = 0,\r\n      i,\r\n      chr;\r\n    for (i = 0; i < user.length; i++) {\r\n      chr = user.charCodeAt(i);\r\n      hash = (hash << 5) - hash + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash + 2147483647 + 1;\r\n  };\r\n  if (userData.user && recentChats)\r\n    return (\r\n      <div className=\"ml-3\">\r\n        <Col>\r\n          <Row\r\n            style={{\r\n              position: \"relative\",\r\n            }}\r\n            className=\"float-right\"\r\n          >\r\n            <ToggleButtonGroup\r\n              type=\"checkbox\"\r\n              value={value}\r\n              onChange={() => setShow(!show)}\r\n            >\r\n              <ToggleButton value={false}>\r\n                <FontAwesomeIcon icon={faBell} />\r\n                <Badge variant=\"danger\">\r\n                  {recentChats.map((user) => (\r\n                    <Notification\r\n                      room={\r\n                        hashGenerator(userData.user.username) +\r\n                        hashGenerator(user)\r\n                      }\r\n                      user={user}\r\n                      setNotification={setNotification}\r\n                      notification={notification}\r\n                      setBadge={setBadge}\r\n                      badge={badge}\r\n                    />\r\n                  ))}\r\n                  {badge}\r\n                </Badge>\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Row>\r\n          <Row>\r\n            <Toast\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 45,\r\n                right: 0,\r\n                background: \"white\",\r\n                width: 250,\r\n              }}\r\n              onClose={() => setShow(false)}\r\n              show={show}\r\n            >\r\n              <Toast.Header className=\"text-info\">\r\n                <strong className=\"ml-auto\">Notifications</strong>\r\n              </Toast.Header>\r\n              <Toast.Body className=\"text-primary\">\r\n                {notification.length > 0 ? (\r\n                  notification.map((item, index) => (\r\n                    <div>\r\n                      ( {item.number} ) new messages from{\" \"}\r\n                      <NavLink\r\n                        key={index}\r\n                        to={{\r\n                          pathname: \"/chat\",\r\n                          search: `?name=${userData.user.username}&room=${\r\n                            hashGenerator(userData.user.username) +\r\n                            hashGenerator(item.user)\r\n                          }&otherUser=${item.user}`,\r\n                        }}\r\n                      >\r\n                        {item.user}\r\n                      </NavLink>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div>No new notifications</div>\r\n                )}\r\n              </Toast.Body>\r\n            </Toast>\r\n          </Row>\r\n          <Divider />\r\n        </Col>\r\n      </div>\r\n    );\r\n  else return <div>No new notifications</div>;\r\n};\r\n\r\nexport default Notifications;\r\n",["197","198"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Profile.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Followers.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Posts.js",["199"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport axios from \"../axios\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport Post from \"./Post\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container } from \"react-bootstrap\";\r\nconst Posts = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const postsNo = 3;\r\n  const [hasMorePosts, setHasMorePosts] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [searchResults, setSearchResults] = useState(true);\r\n  const { userData } = useContext(UserContext);\r\n  const fetchData = async () => {\r\n    setSearchResults(true);\r\n    let url;\r\n    let req = await axios.post(\"https://app-litsoc.herokuapp.com/post/all\", {\r\n      page: page,\r\n      size: postsNo,\r\n    });\r\n    setPage(0);\r\n    if (props.myProfile && userData.user) {\r\n      setPage(0);\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${userData.user.id}`;\r\n      req = await axios.post(url, { page: page, size: postsNo });\r\n      if (req.data.msg === \"No Results\" || req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.secondUserProfile) {\r\n      setPage(0);\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${props.secondUserId.id}`;\r\n      req = await axios.post(url, { page: page, size: postsNo });\r\n      if (req.data.msg === \"No Results\" || req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.searchKeyword || props.category || props.genre) {\r\n      setPage(0);\r\n      req = await axios.post(\r\n        `https://app-litsoc.herokuapp.com/post/all/search?keyword=${\r\n          props.searchKeyword ? props.searchKeyword : \"\"\r\n        }&category=${props.category ? props.category : \"\"}&genres=${\r\n          props.genre ? props.genre : \"\"\r\n        }`,\r\n        { page: page, size: postsNo }\r\n      );\r\n      if (req.data.msg === \"No Results\" || req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.subscription) {\r\n      setPage(0);\r\n      req = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/post/subscriptions\",\r\n        {\r\n          page: page,\r\n          size: postsNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": userData.token,\r\n          },\r\n        }\r\n      );\r\n      if (!req.data.hasNext && req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    }\r\n    setHasMorePosts(req.data.hasNext);\r\n    setPosts(req.data.posts);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [\r\n    props.subscription,\r\n    props.myProfile,\r\n    props.secondUserId,\r\n    props.secondUserProfile,\r\n    userData.user,\r\n    props.searchKeyword,\r\n    props.category,\r\n    props.genre,\r\n  ]);\r\n  const fetchMoreData = async () => {\r\n    const tempPage = page + 1;\r\n    setPage((prevPage) => prevPage + 1);\r\n    let url;\r\n    let res = await axios.post(\"https://app-litsoc.herokuapp.com/post/all\", {\r\n      page: tempPage,\r\n      size: postsNo,\r\n    });\r\n    if (props.myProfile && userData.user) {\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${userData.user.id}`;\r\n      res = await axios.post(url, { page: tempPage, size: postsNo });\r\n    } else if (props.secondUserProfile) {\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${props.secondUserId.id}`;\r\n      res = await axios.post(url, { page: tempPage, size: postsNo });\r\n    } else if (props.searchKeyword || props.category || props.genre) {\r\n      res = await axios.post(\r\n        `https://app-litsoc.herokuapp.com/post/all/search?keyword=${\r\n          props.searchKeyword ? props.searchKeyword : \"\"\r\n        }&category=${props.category ? props.category : \"\"}&genres=${\r\n          props.genre ? props.genre : \"\"\r\n        }`,\r\n        { page: tempPage, size: postsNo }\r\n      );\r\n    } else if (props.subscription) {\r\n      res = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/post/subscriptions\",\r\n        {\r\n          page: tempPage,\r\n          size: postsNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": userData.token,\r\n          },\r\n        }\r\n      );\r\n    }\r\n    setHasMorePosts(res.data.hasNext);\r\n    setPosts((prevPosts) => {\r\n      return prevPosts.concat(res.data.posts);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={posts.length} //This is important field to render the next data\r\n      next={fetchMoreData}\r\n      hasMore={hasMorePosts}\r\n      loader={<h4>Loading...</h4>}\r\n    >\r\n      {searchResults ? (\r\n        posts.length > 0 ? (\r\n          posts.map((post) => <Post post={post} myProfile={props.myProfile} />)\r\n        ) : (\r\n          <Container\r\n            className=\"my-3 py-md-2 rounded bg-dark shadow-lg text-light\"\r\n            fluid\r\n          >\r\n            <h4>\r\n              <FontAwesomeIcon icon={faSpinner} spin />\r\n              Loading\r\n            </h4>\r\n          </Container>\r\n        )\r\n      ) : (\r\n        <Container\r\n          className=\"my-3 py-md-2 rounded bg-dark shadow-lg text-light\"\r\n          fluid\r\n        >\r\n          <h2>No Results</h2>\r\n        </Container>\r\n      )}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Following.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\index.js",[],["200","201"],"C:\\Users\\shash\\front_bootstrap\\src\\App.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\reportWebVitals.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Comment.js",["202","203"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"../axios\";\r\nimport moment from \"moment\";\r\nimport { Accordion, Image, Button } from \"react-bootstrap\";\r\nimport CommentReply from \"./CommentReply\";\r\nimport CreateComment from \"./CreateComment\";\r\nimport CreateCommentReply from \"./CreateCommentReply\";\r\nconst Comments = ({ postId }) => {\r\n  const [comments, setComments] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const comments = await axios.get(\r\n        `https://app-litsoc.herokuapp.com/comment/all/${postId}`\r\n      );\r\n      setComments(comments.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const checkImage = (userImage, username) => {\r\n    if (userImage !== \"false\") {\r\n      return `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${username}?alt=media`;\r\n    }\r\n    return \"https://app-litsoc.herokuapp.com/image/guest\";\r\n  };\r\n  if (comments)\r\n    return (\r\n      <div className=\"container bg-dark\">\r\n        <CreateComment postId={postId} />\r\n        {comments.map((comment) => (\r\n          <div className=\"card bg-dark border-0\">\r\n            <div className=\"card-body\">\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"row my-2\">\r\n                <div className=\"col-md-2 col-3\">\r\n                  <Image\r\n                    src={checkImage(comment.userImage, comment.username)}\r\n                    roundedCircle\r\n                    fluid\r\n                    style={{ aspectRatio: \"16/10\" }}\r\n                  />\r\n                  <p className=\"text-muted text-center small\">\r\n                    {moment(comment.time).format(\"lll\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-10 col-9\">\r\n                  <p>\r\n                    <a\r\n                      className=\"float-left text-light text-decoration-none\"\r\n                      href={`/secondUser/${comment.userId}`}\r\n                    >\r\n                      <strong>{comment.username}</strong>\r\n                    </a>\r\n                  </p>\r\n                  <div className=\"clearfix\"></div>\r\n                  <p>{comment.content}</p>\r\n                  <Accordion>\r\n                    <Accordion.Toggle\r\n                      eventKey=\"0\"\r\n                      className=\"btn btn-outline-secondary text-light\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faReply} /> Reply\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\" className=\"mt-3\">\r\n                      <CreateCommentReply\r\n                        parentId={comment._id}\r\n                        postId={postId}\r\n                      />\r\n                    </Accordion.Collapse>\r\n                  </Accordion>\r\n                </div>\r\n              </div>\r\n              <Accordion>\r\n                <Accordion.Toggle\r\n                  as={Button}\r\n                  variant=\"link\"\r\n                  eventKey=\"0\"\r\n                  className=\"text-decoration-none text-light\"\r\n                >\r\n                  <h6>View Replies</h6>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <CommentReply parentId={comment._id} />\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  else return <div>Loading...</div>;\r\n};\r\n\r\nexport default Comments;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\SearchBox.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SignUp.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SecondUser.js",[],["204","205"],"C:\\Users\\shash\\front_bootstrap\\src\\SwipeDrawer.js",["206"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SearchBox from \"./components/SearchBox\";\r\nimport Posts from \"./components/Posts\";\r\nimport PopularGenres from \"./components/PopularGenres\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSignOutAlt,\r\n  faUser,\r\n  faComment,\r\n  faSpinner,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport logo from \"./photos/logo2.png\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport photo from \"./photos/guest.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport UserContext from \"./context/UserContext\";\r\nimport Profile from \"./components/Profile\";\r\nimport Notifications from \"./components/Notifications\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  tabroot: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    height: 224,\r\n  },\r\n  indicator: {\r\n    left: \"0px\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  tabcontent: {\r\n    flexGrow: 1,\r\n    background: \"#0a2126\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\nexport default function SwipeDrawer(props) {\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    if (token && !userData.user) setLoading(true);\r\n    else setLoading(false);\r\n  }, [userData.user]);\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n      imgUrl: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n  };\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    right: false,\r\n  });\r\n  const [searchKeyword, setSearchKeyword] = useState();\r\n  const [genre, setGenre] = useState();\r\n  console.log(searchKeyword, genre, props.category);\r\n  const [value, setValue] = React.useState(\r\n    props.isFalse ? \"false\" : props.defValue ? props.defValue : 0\r\n  );\r\n  const theme = useTheme();\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n  const [value2, setValue2] = React.useState(0);\r\n\r\n  const handleChange2 = (event, newValue) => {\r\n    setValue2(newValue);\r\n  };\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, classes.tabcontent, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <div className={classes.drawerHeader}>\r\n        <IconButton onClick={toggleDrawer(\"right\", false)}>\r\n          <ChevronRightIcon className=\"text-light\" />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"w-100 text-center\">\r\n        <Image\r\n          className=\"bg-transparent mb-3\"\r\n          src={\r\n            userData.user\r\n              ? userData.user.imgId !== \"false\"\r\n                ? `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${userData.user.username}?alt=media`\r\n                : photo\r\n              : photo\r\n          }\r\n          roundedCircle\r\n          alt=\"user pic\"\r\n          height=\"90\"\r\n          width=\"95\"\r\n        />\r\n        <h4 className=\"text-light text-center mb-1\">\r\n          {userData.user ? userData.user.username : \"Guest\"}\r\n        </h4>\r\n      </div>\r\n      <Divider className=\"bg-light\" />\r\n      <List>\r\n        {userData.user ? (\r\n          <Tabs\r\n            orientation=\"vertical\"\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"Vertical tabs example\"\r\n            className={classes.tabs}\r\n            classes={{\r\n              indicator: classes.indicator,\r\n            }}\r\n          >\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/home\"\r\n              label=\"Home\"\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/reviews\"\r\n              label=\"Reviews\"\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/stories\"\r\n              label=\"Stories\"\r\n              {...a11yProps(2)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/summaries\"\r\n              label=\"Summaries\"\r\n              {...a11yProps(3)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/poems\"\r\n              label=\"Poems\"\r\n              {...a11yProps(4)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/analysis\"\r\n              label=\"Analysis\"\r\n              {...a11yProps(5)}\r\n            />\r\n            <Divider className=\"bg-light\" />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/profile\"\r\n              icon={\r\n                <div>\r\n                  <FontAwesomeIcon icon={faUser} /> Profile\r\n                </div>\r\n              }\r\n              {...a11yProps(6)}\r\n            />\r\n            <Tab\r\n              component=\"a\"\r\n              className=\"text-decoration-none text-light\"\r\n              href=\"/home\"\r\n              onClick={logout}\r\n              icon={\r\n                <div>\r\n                  <FontAwesomeIcon icon={faSignOutAlt} /> Logout\r\n                </div>\r\n              }\r\n            />\r\n          </Tabs>\r\n        ) : (\r\n          <Tabs\r\n            orientation=\"vertical\"\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            aria-label=\"Vertical tabs example\"\r\n            className={classes.tabs}\r\n            classes={{\r\n              indicator: classes.indicator,\r\n            }}\r\n          >\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/home\"\r\n              label=\"Home\"\r\n              {...a11yProps(0)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/reviews\"\r\n              label=\"Reviews\"\r\n              {...a11yProps(1)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/stories\"\r\n              label=\"Stories\"\r\n              {...a11yProps(2)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/summaries\"\r\n              label=\"Summaries\"\r\n              {...a11yProps(3)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/poems\"\r\n              label=\"Poems\"\r\n              {...a11yProps(4)}\r\n            />\r\n            <Tab\r\n              component={NavLink}\r\n              className=\"text-decoration-none text-light\"\r\n              to=\"/analysis\"\r\n              label=\"Analysis\"\r\n              {...a11yProps(5)}\r\n            />\r\n          </Tabs>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n              <Toolbar className=\"bg-primary\">\r\n                <NavLink\r\n                  to=\"/home\"\r\n                  className=\"font-weight-bold text-responsive text-light text-decoration-none\"\r\n                >\r\n                  <Image\r\n                    src={logo}\r\n                    alt=\"litsoc\"\r\n                    width=\"90\"\r\n                    height=\"90\"\r\n                    className=\"d-inline-block align-top\"\r\n                    rounded\r\n                  />\r\n                </NavLink>\r\n                {userData.user ? (\r\n                  <>\r\n                    <NavLink\r\n                      to=\"/chats\"\r\n                      className=\"font-weight-bold text-responsive text-light text-decoration-none ml-auto\"\r\n                    >\r\n                      <h5>\r\n                        <FontAwesomeIcon icon={faComment} />\r\n                      </h5>\r\n                    </NavLink>\r\n                    <div className=\"ml-2\">\r\n                      <Notifications />\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"ml-auto\">\r\n                      {loading && <FontAwesomeIcon icon={faSpinner} spin />}\r\n                      {!loading && <SignUp />}\r\n                    </div>\r\n                    <div className=\"ml-2\">{!loading && <SignIn />}</div>\r\n                  </>\r\n                )}\r\n                <div className=\"ml-2\">\r\n                  <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={toggleDrawer(\"right\", true)}\r\n                    edge=\"end\"\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                </div>\r\n              </Toolbar>\r\n            </AppBar>\r\n          </div>\r\n          <SwipeableDrawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n            onOpen={toggleDrawer(anchor, true)}\r\n          >\r\n            {list(anchor)}\r\n          </SwipeableDrawer>\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      <main className={clsx(classes.content)}>\r\n        <TabPanel value={value} index={0}>\r\n          <SearchBox\r\n            setSearchKeyword={setSearchKeyword}\r\n            setCategory={props.setCategory}\r\n            setGenre={setGenre}\r\n          />\r\n          <Container fluid=\"xl\" className=\"mw-100\">\r\n            <Row>\r\n              <Col md={9} className=\"bg-primary rounded text-light\">\r\n                <Container fluid>\r\n                  <Col>\r\n                    <Row>\r\n                      <div className={classes.root2}>\r\n                        <Tabs\r\n                          value={value2}\r\n                          onChange={handleChange2}\r\n                          aria-label=\"Horizontal tabs\"\r\n                          className={classes.tabs2}\r\n                        >\r\n                          <Tab\r\n                            className=\"my-3 mx-1 bg-primary\"\r\n                            label=\"Feed\"\r\n                            {...a11yProps(0)}\r\n                          />\r\n                          <Tab\r\n                            className=\"my-3 mx-1 bg-primary\"\r\n                            label=\"Subscriptions\"\r\n                            {...a11yProps(1)}\r\n                          />\r\n                        </Tabs>\r\n                      </div>\r\n                      <TabPanel value={value2} index={0}>\r\n                        <Posts\r\n                          genre={genre}\r\n                          category={props.category}\r\n                          searchKeyword={searchKeyword}\r\n                          viewpost=\"viewpost\"\r\n                          profile={false}\r\n                          subscription={false}\r\n                        />\r\n                      </TabPanel>\r\n                      <TabPanel value={value2} index={1}>\r\n                        {userData.user ? (\r\n                          <Posts\r\n                            genre={genre}\r\n                            category={props.category}\r\n                            searchKeyword={searchKeyword}\r\n                            viewpost=\"viewpost\"\r\n                            profile={false}\r\n                            subscription={true}\r\n                          />\r\n                        ) : (\r\n                          <h1 className=\"text-light\">\r\n                            \" You have not subscribed to anyone.\"\r\n                          </h1>\r\n                        )}\r\n                      </TabPanel>\r\n                    </Row>\r\n                  </Col>\r\n                </Container>\r\n              </Col>\r\n              <Col md={3}>\r\n                <PopularGenres />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <SearchBox\r\n            setSearchKeyword={setSearchKeyword}\r\n            setCategory={props.setCategory}\r\n            setGenre={setGenre}\r\n          />\r\n          <Container fluid=\"xl\" className=\"mw-100\">\r\n            <Row>\r\n              <Col xs={9}>\r\n                <Posts\r\n                  genre={genre}\r\n                  category={props.category}\r\n                  searchKeyword={searchKeyword}\r\n                  viewpost=\"viewpost\"\r\n                  profile={false}\r\n                  subscription={false}\r\n                />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <PopularGenres />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2}>\r\n          <SearchBox\r\n            setSearchKeyword={setSearchKeyword}\r\n            setCategory={props.setCategory}\r\n            setGenre={setGenre}\r\n          />\r\n          <Container fluid=\"xl\" className=\"mw-100\">\r\n            <Row>\r\n              <Col xs={9}>\r\n                <Posts\r\n                  genre={genre}\r\n                  category={props.category}\r\n                  searchKeyword={searchKeyword}\r\n                  viewpost=\"viewpost\"\r\n                  profile={false}\r\n                  subscription={false}\r\n                />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <PopularGenres />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={3}>\r\n          <SearchBox\r\n            setSearchKeyword={setSearchKeyword}\r\n            setCategory={props.setCategory}\r\n            setGenre={setGenre}\r\n          />\r\n          <Container fluid=\"xl\" className=\"mw-100\">\r\n            <Row>\r\n              <Col xs={9}>\r\n                <Posts\r\n                  genre={genre}\r\n                  category={props.category}\r\n                  searchKeyword={searchKeyword}\r\n                  viewpost=\"viewpost\"\r\n                  profile={false}\r\n                  subscription={false}\r\n                />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <PopularGenres />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={4}>\r\n          <SearchBox\r\n            setSearchKeyword={setSearchKeyword}\r\n            setCategory={props.setCategory}\r\n            setGenre={setGenre}\r\n          />\r\n          <Container fluid=\"xl\" className=\"mw-100\">\r\n            <Row>\r\n              <Col xs={9}>\r\n                <Posts\r\n                  genre={genre}\r\n                  category={props.category}\r\n                  searchKeyword={searchKeyword}\r\n                  viewpost=\"viewpost\"\r\n                  profile={false}\r\n                  subscription={false}\r\n                />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <PopularGenres />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={5}>\r\n          <SearchBox\r\n            setSearchKeyword={setSearchKeyword}\r\n            setCategory={props.setCategory}\r\n            setGenre={setGenre}\r\n          />\r\n          <Container fluid=\"xl\" className=\"mw-100\">\r\n            <Row>\r\n              <Col xs={9}>\r\n                <Posts\r\n                  genre={genre}\r\n                  category={props.category}\r\n                  searchKeyword={searchKeyword}\r\n                  viewpost=\"viewpost\"\r\n                  profile={false}\r\n                  subscription={false}\r\n                />\r\n              </Col>\r\n              <Col xs={3}>\r\n                <PopularGenres />\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={6}>\r\n          <Profile />\r\n        </TabPanel>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\shash\\front_bootstrap\\src\\Routes.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\ViewPost.js",["207"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport photo from \"../photos/livespace.jpg\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport ReactAudioPlayer from \"react-audio-player\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCommentAlt,\r\n  faThumbsUp,\r\n  faThumbsDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SwipeDrawer from \"../SwipeDrawer\";\r\nimport bg from \"../photos/Endless-Constellation2.svg\";\r\nimport Comments from \"./Comment\";\r\nimport axios from \"../axios\";\r\nimport moment from \"moment\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport MyAudioPlayer from \"./AudioPlayer/MyAudioPlayer\";\r\n\r\nconst ViewPost = ({ match }) => {\r\n  const [post, setPost] = useState();\r\n  const { userData } = useContext(UserContext);\r\n  const [userLiked, setUserLiked] = useState(false);\r\n  const [postLiked, setPostLiked] = useState(false);\r\n  const [userDisliked, setUserDisliked] = useState(false);\r\n  const [postDisliked, setPostDisliked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `https://app-litsoc.herokuapp.com/post/${match.params.id}`\r\n        );\r\n        setPost(res.data);\r\n        setUserLiked(\r\n          res.data.likes.includes(userData.user ? userData.user.id : null)\r\n        );\r\n        setUserDisliked(\r\n          res.data.dislikes.includes(userData.user ? userData.user.id : null)\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchPost();\r\n  }, [match.params.id, userData.user]);\r\n\r\n  if (post) {\r\n    return (\r\n      <div\r\n        style={{\r\n          backgroundAttachment: \"fixed\",\r\n          backgroundImage: `url(${bg})`,\r\n        }}\r\n      >\r\n        <SwipeDrawer isFalse={1} />\r\n        <div className=\"container bg-primary text-light rounded\">\r\n          <div className=\"row\">\r\n            {/* <!-- Post Content Column --> */}\r\n            <div className=\"col-lg-8\">\r\n              {/* <!-- Title --> */}\r\n              <h1 className=\"mt-4 font-weight-bold\">{post.title}</h1>\r\n              {/* <!-- Author --> */}\r\n              <h5 className=\"text-light text-muted text-decoration-none\">\r\n                {post.category[0]}\r\n                {post.category[1] ? \"| \" + post.category[1] : \"\"}\r\n              </h5>\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <a\r\n                      href={`/secondUser/${post.userid}`}\r\n                      className=\"text-decoration-none text-light\"\r\n                    >\r\n                      <h5>{post.name}</h5>\r\n                    </a>\r\n                  </div>\r\n                  {/* <!-- Date/Time --> */}\r\n                  <div className=\"col-6 text-right\">\r\n                    <p>Posted on {moment(post.time).format(\"LLL\")}</p>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- Post Content --> */}\r\n              </div>\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"font-weight-normal font-small text-secondary\">\r\n                <p>Post Description - \"{post.description}\"</p>\r\n              </div>\r\n              <hr className=\"bg-light\" />\r\n              {/* <!-- Preview Image --> */}\r\n              {/* <ReactAudioPlayer\r\n                    src={`https://app-litsoc.herokuapp.com/files/${post.fileName}`}\r\n                    controls\r\n                    controlsList=\"nodownload\"\r\n                    volume={0.5}\r\n                    onListen={handleViews}\r\n                    onCanPlay={() => {\r\n                      setCanPlay(true);\r\n                    }}\r\n                  /> */}\r\n              <MyAudioPlayer filename={post.fileName} postId={post._id} />\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-3 col-12 mt-3 my-lg-auto\">\r\n                  <Button\r\n                    className=\"mr-1 text-light bg-primary border-dark text-decoration-none\"\r\n                    onClick={() => {\r\n                      const token = localStorage.getItem(\"auth-token\");\r\n                      axios\r\n                        .patch(\r\n                          `https://app-litsoc.herokuapp.com/post/likes/${post._id}`,\r\n                          null,\r\n                          { headers: { \"x-auth-token\": token } }\r\n                        )\r\n                        .then((res) => {\r\n                          setPostLiked((prevState) => !prevState);\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                        });\r\n                    }}\r\n                  >\r\n                    {userLiked\r\n                      ? postLiked\r\n                        ? post.likes.length - 1\r\n                        : post.likes.length\r\n                      : postLiked\r\n                      ? post.likes.length + 1\r\n                      : post.likes.length}{\" \"}\r\n                    {userLiked ? (\r\n                      postLiked ? (\r\n                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                      ) : (\r\n                        <FontAwesomeIcon\r\n                          icon={faThumbsUp}\r\n                          className=\"text-danger\"\r\n                        />\r\n                      )\r\n                    ) : postLiked ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faThumbsUp}\r\n                        className=\"text-danger\"\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon icon={faThumbsUp} />\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"mr-1 text-light bg-primary border-dark text-decoration-none\"\r\n                    onClick={() => {\r\n                      const token = localStorage.getItem(\"auth-token\");\r\n                      axios\r\n                        .patch(\r\n                          `https://app-litsoc.herokuapp.com/post/dislikes/${post._id}`,\r\n                          null,\r\n                          { headers: { \"x-auth-token\": token } }\r\n                        )\r\n                        .then((res) => {\r\n                          setPostDisliked((prevState) => !prevState);\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                        });\r\n                    }}\r\n                  >\r\n                    {userDisliked\r\n                      ? postDisliked\r\n                        ? post.dislikes.length - 1\r\n                        : post.dislikes.length\r\n                      : postDisliked\r\n                      ? post.dislikes.length + 1\r\n                      : post.dislikes.length}{\" \"}\r\n                    {userDisliked ? (\r\n                      postDisliked ? (\r\n                        <FontAwesomeIcon icon={faThumbsDown} />\r\n                      ) : (\r\n                        <FontAwesomeIcon\r\n                          icon={faThumbsDown}\r\n                          className=\"text-danger\"\r\n                        />\r\n                      )\r\n                    ) : postDisliked ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faThumbsDown}\r\n                        className=\"text-danger\"\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon icon={faThumbsDown} />\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n                <div className=\"col-lg-2\"></div>\r\n              </div>\r\n              <hr className=\"bg-light\" />\r\n              {/* <!-- Comments Form --> */}\r\n              <div className=\"media mt-4\">\r\n                <div className=\"media-body\">\r\n                  <Comments postId={match.params.id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- Sidebar Widgets Column --> */}\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card my-4 bg-dark text-light\">\r\n                <h5 className=\"card-header border-secondary\">Tags</h5>\r\n                <div className=\"card-body\">\r\n                  <h6>\r\n                    {post.genres.map((genre) => (\r\n                      <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                        {genre}\r\n                      </Badge>\r\n                    ))}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              {/* <!-- Side Widget --> */}\r\n              <div className=\"card my-4 bg-dark\">\r\n                <h5 className=\"card-header border-secondary text-light\">\r\n                  Related Post\r\n                </h5>\r\n                <div className=\"card-body\">\r\n                  <NavLink to=\"/viewpost\" className=\"text-decoration-none\">\r\n                    <h4 className=\"font-weight-bold card-headline\">\r\n                      Cosmos - Carl Sagan\r\n                    </h4>\r\n                  </NavLink>\r\n                  <h6 className=\"text-muted card-paragraph\">\r\n                    Review | Analysis\r\n                  </h6>\r\n                  <div className=\"font-weight-normal font-small text-secondary\">\r\n                    <p>\r\n                      Post Description - \"Cosmos is a 1980 popular science book\r\n                      by astronomer and Pulitzer Prize-winning author Carl\r\n                      Sagan. Its 13 illustrated chapters, corresponding to the\r\n                      13 episodes of the Cosmos TV series, which the book was\r\n                      co-developed with and intended to complement, explore the\r\n                      mutual development of science and civilization. One of\r\n                      Sagan's main purposes for the book and television series\r\n                      was to explain complex scientific ideas to anyone\r\n                      interested in learning. \"\r\n                    </p>\r\n                  </div>\r\n                  <h6>\r\n                    <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                      Non Fiction\r\n                    </Badge>\r\n                    <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                      Science\r\n                    </Badge>\r\n                    <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                      Space\r\n                    </Badge>\r\n                    <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                      Physics\r\n                    </Badge>\r\n                    <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                      Astronomy\r\n                    </Badge>\r\n                  </h6>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                      <Image\r\n                        src={photo}\r\n                        roundedCircle\r\n                        height=\"110\"\r\n                        width=\"120\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-7 my-auto\">\r\n                      <NavLink\r\n                        to=\"/secondUser\"\r\n                        className=\"text-decoration-none\"\r\n                      >\r\n                        <h5 className=\"font-weight-bold text-light\">\r\n                          Jenny Scott\r\n                        </h5>\r\n                      </NavLink>\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                  <a\r\n                    href=\"/\"\r\n                    className=\"ml-2 mr-5 text-light text-decoration-none\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faCommentAlt} /> 45 Comments\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Redirecting... if you are not redirect in 5 seconds please refresh the\r\n      page.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n",["208","209"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\PopularGenres.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\axios.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SignIn.js",["210"],"import React, { useState, useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport axios from \"../axios\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport ErrorNotice from \"./ErrorNotice\";\r\n\r\nfunction ModalCentered(props) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [error, setError] = useState();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const loginUser = {\r\n        password,\r\n        username,\r\n      };\r\n      const loginRes = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/user/login\",\r\n        loginUser\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n    } catch (err) {\r\n      err.response.data.message && setError(err.response.data.message);\r\n      setTimeout(function () {\r\n        setError(undefined);\r\n      }, 5000);\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header className=\"bg-dark text-light\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"bg-dark text-light\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col xs={6}>\r\n              <Form.Group id=\"loginId\">\r\n                <Form.Label htmlFor=\"inlineFormInputGroup\">Username</Form.Label>\r\n                <InputGroup className=\"mb-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text className=\"bg-primary text-light\">\r\n                      @\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"inlineFormInputGroup\"\r\n                    placeholder=\"Enter Username\"\r\n                    className=\"bg-primary text-light\"\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid username.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col xs={4}>\r\n              <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  className=\"bg-primary text-light\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Invalid username or password.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Modal.Footer className=\"bg-dark text-light\">\r\n            {error && <ErrorNotice message={error} />}\r\n            <Button variant=\"info\" onClick={props.onHide}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction SignUp() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  return (\r\n    <Container>\r\n      <Button\r\n        className=\"mt-1 dark w-100 text-center\"\r\n        variant=\"info\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        Login\r\n      </Button>{\" \"}\r\n      <ModalCentered show={modalShow} onHide={() => setModalShow(false)} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\context\\UserContext.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\ErrorNotice.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Settings.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\CommentReply.js",["211","212","213","214","215"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport { Accordion, Button, Image } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CreateCommentReply from \"./CreateCommentReply\";\r\nconst CommentReply = ({ parentId }) => {\r\n  const [replies, setReplies] = useState();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(\r\n        `https://app-litsoc.herokuapp.com/comment/reply/all/${parentId}`\r\n      );\r\n      setReplies(res.data);\r\n    };\r\n    fetchData();\r\n  }, [parentId]);\r\n  const checkImage = (userImage, username) => {\r\n    if (userImage !== \"false\") {\r\n      return `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${username}?alt=media`;\r\n    }\r\n    return \"https://app-litsoc.herokuapp.com/image/guest\";\r\n  };\r\n  if (replies)\r\n    return (\r\n      <>\r\n        {replies.map((reply) => (\r\n          <div className=\"card card-inner mb-2 bg-dark  border-0\">\r\n            <div className=\"card-body\">\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-md-2 col-3\">\r\n                  <Image\r\n                    src={checkImage(reply.userImage, reply.username)}\r\n                    roundedCircle\r\n                    fluid\r\n                    style={{ aspectRatio: \"16/10\" }}\r\n                  />\r\n                  <p className=\"text-muted text-center small\">\r\n                    {moment(reply.time).format(\"lll\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-10 col-9\">\r\n                  <p>\r\n                    <a\r\n                      className=\"float-left text-light text-decoration-none\"\r\n                      href={`/secondUser/${reply.userId}`}\r\n                    >\r\n                      <strong>{reply.username}</strong>\r\n                    </a>\r\n                  </p>\r\n                  <div className=\"clearfix\"></div>\r\n                  <p>{reply.content}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  else return <div>Loading...</div>;\r\n};\r\n\r\nexport default CommentReply;\r\n",["216","217"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\CreatePost.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateComment.js",[],["218","219"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateCommentReply.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Join\\Join.js",["220","221"],"import React, { useState, useContext, useEffect } from \"react\";\nimport UserContext from \"../../context/UserContext\";\nimport SwipeDrawer from \"../../SwipeDrawer\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Join.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nconst JoinChat = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const { userData } = useContext(UserContext);\n  const [recentChats, setRecentChats] = useState();\n  const hashGenerator = (user) => {\n    let hash = 0,\n      i,\n      chr;\n    for (i = 0; i < user.length; i++) {\n      chr = user.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash + 2147483647 + 1;\n  };\n  useEffect(() => {\n    if (userData.user) {\n      setName(userData.user.username);\n      setRecentChats(\n        userData.user.followers.filter(\n          (username) => username && userData.user.following.includes(username)\n        )\n      );\n    }\n  }, [userData.user]);\n  return (\n    <>\n      <SwipeDrawer isFalse={1} />\n      <div className=\"joinOuterContainer\">\n        <div className=\"joinInnerContainer\">\n          <h1 className=\"heading\">Litsoc Chat</h1>\n          {userData.user && recentChats ? (\n            recentChats.map((user, index) => (\n              <NavLink\n                key={index}\n                onClick={(event) =>\n                  userData.user ? null : event.preventDefault()\n                }\n                to={{\n                  pathname: \"/chat\",\n                  search: `?name=${name}&room=${\n                    hashGenerator(userData.user.username) + hashGenerator(user)\n                  }&otherUser=${user}`,\n                }}\n              >\n                <button className={\"button mt-20\"} type=\"submit\">\n                  {user}\n                </button>\n              </NavLink>\n            ))\n          ) : (\n            <FontAwesomeIcon icon={faSpinner} className=\"text-light\" spin />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default JoinChat;\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\InfoBar\\InfoBar.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Messages.js",["222","223"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nimport Message from \"./Message/Message\";\nimport axios from \"../../axios\";\nimport \"./Messages.css\";\n\nconst Messages = ({ messages, name, room }) => {\n  const [oldMessages, setOldMessages] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem(\"auth-token\");\n      let req;\n      if (room) {\n        req = await axios.get(\n          `https://chat-litsoc.herokuapp.com/chat/messages/${room}`,\n          {\n            headers: {\n              \"x-auth-token\": token,\n            },\n          }\n        );\n        req.data.map((oldMessage) => {\n          if (oldMessage.username !== name && oldMessage.readStatus === false) {\n            axios.patch(\n              \"https://chat-litsoc.herokuapp.com/chat/message/update\",\n              { secondUser: oldMessage.username, readStatus: true },\n              {\n                headers: {\n                  \"x-auth-token\": token,\n                },\n              }\n            );\n          }\n          messages.push(oldMessage);\n        });\n        setOldMessages(req.data);\n      }\n    };\n    fetchData();\n  }, [room]);\n  if (oldMessages) {\n    return messages.length > 0 ? (\n      <ScrollToBottom className=\"messages\" followButtonClassName=\"scrollButton\">\n        {messages.map((message, i) => (\n          <div key={i}>\n            <Message message={message} name={name} />\n          </div>\n        ))}\n      </ScrollToBottom>\n    ) : (\n      <div className=\"messages\">\n        <h4 className=\"text-light pl-3\">\n          Start the conversation by saying hello!\n        </h4>\n      </div>\n    );\n  } else\n    return (\n      <div className=\"messages\">\n        <h4 className=\"text-light pl-3\">\n          <FontAwesomeIcon icon={faSpinner} spin /> Loading...\n        </h4>\n      </div>\n    );\n};\n\nexport default Messages;\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Message\\Message.js",[],["224","225"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Input\\Input.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Chat\\Chat.js",["226"],"import React, { useState, useEffect, useContext } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Messages from \"../Messages/Messages\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport axios from \"../../axios\";\nimport SwipeDrawer from \"../../SwipeDrawer\";\nimport UserContext from \"../../context/UserContext\";\n\nimport \"./Chat.css\";\n\nconst ENDPOINT = \"https://chat-litsoc.herokuapp.com/\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [otherUser, setOtherUser] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const { userData } = useContext(UserContext);\n  useEffect(() => {\n    const { name, room, otherUser } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setOtherUser(otherUser);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const sendMessage = (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"auth-token\");\n    if (message && message.trim().length) {\n      socket.emit(\"sendMessage\", message, async () => {\n        setMessage(\"\");\n        await axios.post(\n          \"https://chat-litsoc.herokuapp.com/chat/messages\",\n          {\n            message: message,\n            room: room,\n            readStatus: users.length > 1 ? true : false,\n            receiver: otherUser,\n          },\n          { headers: { \"x-auth-token\": token } }\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"outerContainer\">\n      <SwipeDrawer isFalse={1} />\n      <div className=\"innerContainer\">\n        <InfoBar room={room} otherUser={otherUser} />\n        <Messages messages={messages} name={name} room={room} />\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Post.js",["227","228"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Notification.js",["229","230","231","232"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"../axios\";\r\nimport UserContext from \".././context/UserContext\";\r\nconst Notification = ({\r\n  room,\r\n  user,\r\n  setNotification,\r\n  notification,\r\n  setBadge,\r\n  badge,\r\n}) => {\r\n  const { userData } = useContext(UserContext);\r\n  const [messages, setMessages] = useState([]);\r\n  const [msgs, setMsgs] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const token = localStorage.getItem(\"auth-token\");\r\n      let req;\r\n      if (room) {\r\n        req = await axios.get(\r\n          `https://chat-litsoc.herokuapp.com/chat/messages/${room}`,\r\n          {\r\n            headers: {\r\n              \"x-auth-token\": token,\r\n            },\r\n          }\r\n        );\r\n        setMessages(\r\n          req.data.filter(\r\n            (oldMessage) =>\r\n              oldMessage.username !== userData.user.username &&\r\n              oldMessage.readStatus === false\r\n          )\r\n        );\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [room, userData.user]);\r\n  useEffect(() => {\r\n    console.log(messages);\r\n    if (messages.length > 0) {\r\n      setNotification((prevState) => [\r\n        ...prevState,\r\n        { user: user, number: messages.length },\r\n      ]);\r\n      setBadge((prevState) => prevState + messages.length);\r\n    }\r\n  }, [messages.length, user, setBadge, setNotification]);\r\n  return null;\r\n};\r\nexport default Notification;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Reviews.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Stories.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Summaries.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Poems.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Analysis.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\ProfileTab.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Home.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\components\\Player.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\MyAudioPlayer.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\base.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\UserComments.js",[],{"ruleId":"233","severity":1,"message":"234","line":21,"column":17,"nodeType":"235","messageId":"236","endLine":21,"endColumn":25},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":74,"column":6,"nodeType":"243","endLine":83,"endColumn":4,"suggestions":"244"},{"ruleId":"237","replacedBy":"245"},{"ruleId":"239","replacedBy":"246"},{"ruleId":"233","severity":1,"message":"247","line":1,"column":38,"nodeType":"235","messageId":"236","endLine":1,"endColumn":48},{"ruleId":"241","severity":1,"message":"248","line":21,"column":6,"nodeType":"243","endLine":21,"endColumn":8,"suggestions":"249"},{"ruleId":"237","replacedBy":"250"},{"ruleId":"239","replacedBy":"251"},{"ruleId":"233","severity":1,"message":"252","line":123,"column":9,"nodeType":"235","messageId":"236","endLine":123,"endColumn":14},{"ruleId":"233","severity":1,"message":"253","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":24},{"ruleId":"237","replacedBy":"254"},{"ruleId":"239","replacedBy":"255"},{"ruleId":"233","severity":1,"message":"256","line":15,"column":11,"nodeType":"235","messageId":"236","endLine":15,"endColumn":19},{"ruleId":"233","severity":1,"message":"257","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":19},{"ruleId":"233","severity":1,"message":"258","line":3,"column":21,"nodeType":"235","messageId":"236","endLine":3,"endColumn":27},{"ruleId":"233","severity":1,"message":"259","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":17},{"ruleId":"233","severity":1,"message":"260","line":6,"column":10,"nodeType":"235","messageId":"236","endLine":6,"endColumn":25},{"ruleId":"233","severity":1,"message":"261","line":7,"column":8,"nodeType":"235","messageId":"236","endLine":7,"endColumn":26},{"ruleId":"237","replacedBy":"262"},{"ruleId":"239","replacedBy":"263"},{"ruleId":"237","replacedBy":"264"},{"ruleId":"239","replacedBy":"265"},{"ruleId":"233","severity":1,"message":"266","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":14},{"ruleId":"233","severity":1,"message":"267","line":11,"column":16,"nodeType":"235","messageId":"236","endLine":11,"endColumn":23},{"ruleId":"268","severity":1,"message":"269","line":25,"column":35,"nodeType":"270","messageId":"271","endLine":25,"endColumn":37},{"ruleId":"241","severity":1,"message":"272","line":43,"column":6,"nodeType":"243","endLine":43,"endColumn":12,"suggestions":"273"},{"ruleId":"237","replacedBy":"274"},{"ruleId":"239","replacedBy":"275"},{"ruleId":"233","severity":1,"message":"256","line":24,"column":11,"nodeType":"235","messageId":"236","endLine":24,"endColumn":19},{"ruleId":"233","severity":1,"message":"276","line":28,"column":10,"nodeType":"235","messageId":"236","endLine":28,"endColumn":17},{"ruleId":"233","severity":1,"message":"277","line":28,"column":19,"nodeType":"235","messageId":"236","endLine":28,"endColumn":29},{"ruleId":"233","severity":1,"message":"278","line":1,"column":8,"nodeType":"235","messageId":"236","endLine":1,"endColumn":13},{"ruleId":"233","severity":1,"message":"279","line":14,"column":10,"nodeType":"235","messageId":"236","endLine":14,"endColumn":14},{"ruleId":"233","severity":1,"message":"280","line":14,"column":16,"nodeType":"235","messageId":"236","endLine":14,"endColumn":23},{"ruleId":"241","severity":1,"message":"281","line":48,"column":6,"nodeType":"243","endLine":48,"endColumn":56,"suggestions":"282"},"no-unused-vars","'setValue' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["283"],"no-negated-in-lhs",["284"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["285"],["283"],["284"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["286"],["283"],["284"],"'theme' is assigned a value but never used.","'ReactAudioPlayer' is defined but never used.",["283"],["284"],"'userData' is assigned a value but never used.","'Accordion' is defined but never used.","'Button' is defined but never used.","'faReply' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'CreateCommentReply' is defined but never used.",["283"],["284"],["283"],["284"],"'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'messages' and 'name'. Either include them or remove the dependency array.",["287"],["283"],["284"],"'canPlay' is assigned a value but never used.","'setCanPlay' is assigned a value but never used.","'React' is defined but never used.","'msgs' is assigned a value but never used.","'setMsgs' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'messages'. Either include it or remove the dependency array.",["288"],"no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [props.subscription, props.myProfile, props.secondUserId, props.secondUserProfile, userData.user, props.searchKeyword, props.category, props.genre, fetchData]",{"range":"297","text":"298"},"Update the dependencies array to be: [postId]",{"range":"299","text":"300"},"Update the dependencies array to be: [messages, name, room]",{"range":"301","text":"302"},"Update the dependencies array to be: [messages.length, user, setBadge, setNotification, messages]",{"range":"303","text":"304"},[2706,2899],"[props.subscription, props.myProfile, props.secondUserId, props.secondUserProfile, userData.user, props.searchKeyword, props.category, props.genre, fetchData]",[788,790],"[postId]",[1342,1348],"[messages, name, room]",[1327,1377],"[messages.length, user, setBadge, setNotification, messages]"]