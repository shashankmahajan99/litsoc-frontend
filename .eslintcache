[{"C:\\Users\\shash\\front_bootstrap\\src\\components\\Reviews.js":"1","C:\\Users\\shash\\front_bootstrap\\src\\components\\SecondUser.js":"2","C:\\Users\\shash\\front_bootstrap\\src\\components\\Stories.js":"3","C:\\Users\\shash\\front_bootstrap\\src\\components\\Summaries.js":"4","C:\\Users\\shash\\front_bootstrap\\src\\components\\ViewPost.js":"5","C:\\Users\\shash\\front_bootstrap\\src\\App.js":"6","C:\\Users\\shash\\front_bootstrap\\src\\components\\Chat\\Chat.js":"7","C:\\Users\\shash\\front_bootstrap\\src\\components\\Join\\Join.js":"8","C:\\Users\\shash\\front_bootstrap\\src\\Routes.js":"9","C:\\Users\\shash\\front_bootstrap\\src\\components\\ProfileTab.js":"10","C:\\Users\\shash\\front_bootstrap\\src\\context\\UserContext.js":"11","C:\\Users\\shash\\front_bootstrap\\src\\base.js":"12","C:\\Users\\shash\\front_bootstrap\\src\\components\\Comment.js":"13","C:\\Users\\shash\\front_bootstrap\\src\\components\\Following.js":"14","C:\\Users\\shash\\front_bootstrap\\src\\components\\Input\\Input.js":"15","C:\\Users\\shash\\front_bootstrap\\src\\components\\PopularGenres.js":"16","C:\\Users\\shash\\front_bootstrap\\src\\components\\Profile.js":"17","C:\\Users\\shash\\front_bootstrap\\src\\components\\CommentReply.js":"18","C:\\Users\\shash\\front_bootstrap\\src\\components\\ErrorNotice.js":"19","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreatePost.js":"20","C:\\Users\\shash\\front_bootstrap\\src\\index.js":"21","C:\\Users\\shash\\front_bootstrap\\src\\axios.js":"22","C:\\Users\\shash\\front_bootstrap\\src\\components\\Analysis.js":"23","C:\\Users\\shash\\front_bootstrap\\src\\components\\Home.js":"24","C:\\Users\\shash\\front_bootstrap\\src\\SwipeDrawer.js":"25","C:\\Users\\shash\\front_bootstrap\\src\\components\\InfoBar\\InfoBar.js":"26","C:\\Users\\shash\\front_bootstrap\\src\\components\\SearchBox.js":"27","C:\\Users\\shash\\front_bootstrap\\src\\components\\Notifications.js":"28","C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Message\\Message.js":"29","C:\\Users\\shash\\front_bootstrap\\src\\components\\Notification.js":"30","C:\\Users\\shash\\front_bootstrap\\src\\components\\UserComments.js":"31","C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Messages.js":"32","C:\\Users\\shash\\front_bootstrap\\src\\components\\SignIn.js":"33","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateCommentReply.js":"34","C:\\Users\\shash\\front_bootstrap\\src\\components\\Settings.js":"35","C:\\Users\\shash\\front_bootstrap\\src\\reportWebVitals.js":"36","C:\\Users\\shash\\front_bootstrap\\src\\components\\Followers.js":"37","C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\components\\Player.js":"38","C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\MyAudioPlayer.js":"39","C:\\Users\\shash\\front_bootstrap\\src\\components\\SignUp.js":"40","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateComment.js":"41","C:\\Users\\shash\\front_bootstrap\\src\\components\\Post.js":"42","C:\\Users\\shash\\front_bootstrap\\src\\components\\SponsoredPost.js":"43","C:\\Users\\shash\\front_bootstrap\\src\\components\\Posts.js":"44","C:\\Users\\shash\\front_bootstrap\\src\\components\\Poems.js":"45","C:\\Users\\shash\\front_bootstrap\\src\\components\\ScrollToTop.js":"46"},{"size":1030,"mtime":1619961126421,"results":"47","hashOfConfig":"48"},{"size":11515,"mtime":1620113937871,"results":"49","hashOfConfig":"48"},{"size":1027,"mtime":1619961058681,"results":"50","hashOfConfig":"48"},{"size":1048,"mtime":1619961040461,"results":"51","hashOfConfig":"48"},{"size":13789,"mtime":1620109341614,"results":"52","hashOfConfig":"48"},{"size":2067,"mtime":1619960368839,"results":"53","hashOfConfig":"48"},{"size":2840,"mtime":1619966365563,"results":"54","hashOfConfig":"48"},{"size":2579,"mtime":1619966387542,"results":"55","hashOfConfig":"48"},{"size":2753,"mtime":1613313290280,"results":"56","hashOfConfig":"48"},{"size":826,"mtime":1619961140332,"results":"57","hashOfConfig":"48"},{"size":79,"mtime":1608390502629,"results":"58","hashOfConfig":"48"},{"size":461,"mtime":1613287966132,"results":"59","hashOfConfig":"48"},{"size":3643,"mtime":1619774484823,"results":"60","hashOfConfig":"48"},{"size":6845,"mtime":1620108013260,"results":"61","hashOfConfig":"48"},{"size":541,"mtime":1611338007504,"results":"62","hashOfConfig":"48"},{"size":1661,"mtime":1619685081181,"results":"63","hashOfConfig":"48"},{"size":6402,"mtime":1620034935258,"results":"64","hashOfConfig":"48"},{"size":2365,"mtime":1619774487661,"results":"65","hashOfConfig":"48"},{"size":174,"mtime":1608666149887,"results":"66","hashOfConfig":"48"},{"size":7770,"mtime":1619776613022,"results":"67","hashOfConfig":"48"},{"size":587,"mtime":1607347923720,"results":"68","hashOfConfig":"48"},{"size":144,"mtime":1612342747576,"results":"69","hashOfConfig":"48"},{"size":1030,"mtime":1619961252495,"results":"70","hashOfConfig":"48"},{"size":1025,"mtime":1620035865683,"results":"71","hashOfConfig":"48"},{"size":27326,"mtime":1620112825278,"results":"72","hashOfConfig":"48"},{"size":642,"mtime":1619721238538,"results":"73","hashOfConfig":"48"},{"size":4869,"mtime":1620035270658,"results":"74","hashOfConfig":"48"},{"size":4669,"mtime":1620034294089,"results":"75","hashOfConfig":"48"},{"size":1020,"mtime":1611408697645,"results":"76","hashOfConfig":"48"},{"size":1312,"mtime":1619873932958,"results":"77","hashOfConfig":"48"},{"size":2698,"mtime":1619774464048,"results":"78","hashOfConfig":"48"},{"size":2049,"mtime":1612342735733,"results":"79","hashOfConfig":"48"},{"size":4152,"mtime":1619682330410,"results":"80","hashOfConfig":"48"},{"size":1020,"mtime":1613501769455,"results":"81","hashOfConfig":"48"},{"size":6541,"mtime":1619851600260,"results":"82","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"83","hashOfConfig":"48"},{"size":7087,"mtime":1620108013575,"results":"84","hashOfConfig":"48"},{"size":3661,"mtime":1620110483280,"results":"85","hashOfConfig":"48"},{"size":2298,"mtime":1618432318559,"results":"86","hashOfConfig":"48"},{"size":7322,"mtime":1619682457470,"results":"87","hashOfConfig":"48"},{"size":1069,"mtime":1615634164632,"results":"88","hashOfConfig":"48"},{"size":9167,"mtime":1620112584113,"results":"89","hashOfConfig":"48"},{"size":2613,"mtime":1620114767650,"results":"90","hashOfConfig":"48"},{"size":7024,"mtime":1620109193042,"results":"91","hashOfConfig":"48"},{"size":1022,"mtime":1620109262792,"results":"92","hashOfConfig":"48"},{"size":1037,"mtime":1620030180454,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1vj7ngk",{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"97"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"175"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"148"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"97"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"97"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\shash\\front_bootstrap\\src\\components\\Reviews.js",["215"],"import SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst Reviews = () => {\r\n  const [category, setCategory] = useState(\"Review\");\r\n  return (\r\n    <div\r\n      style={{\r\n        //   backgroundAttachment: \"fixed\",\r\n        //   backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer\r\n        isFalse={0}\r\n        defValue={1}\r\n        category={category}\r\n        setCategory={setCategory}\r\n        showSearch={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Reviews;\r\n",["216","217"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SecondUser.js",["218","219"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport Posts from \"./Posts\";\r\nimport photo from \"../photos/guest.png\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\nimport Followers from \"./Followers\";\r\nimport Following from \"./Following\";\r\nimport axios from \"../axios\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport UserComments from \"./UserComments\";\r\n\r\nconst SecondUser = ({ match }) => {\r\n  const [value, setValue] = useState(0);\r\n  const [secondUserData, setSecondUserData] = useState({});\r\n  // `Follow` Button State\r\n  const [isFollowed, setIsFollowed] = useState(false);\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get(\r\n        `https://app-litsoc.herokuapp.com/user/${match.params.id}`\r\n      );\r\n      setSecondUserData(res.data);\r\n      if (userData.user) {\r\n        if (res.data.followers.includes(userData.user.username)) {\r\n          setIsFollowed(true);\r\n        }\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, [match.params.id, userData.user]);\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const updateDimensions = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 0,\r\n      height: width > 768 ? 450 : \"auto\",\r\n    },\r\n    root2: {\r\n      flexGrow: 1,\r\n    },\r\n    tabs: {\r\n      alignItems: \"center\",\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n      color: \"white\",\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const addFollower = async (username) => {\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    await axios\r\n      .patch(\r\n        `https://app-litsoc.herokuapp.com/user/addFollower/${username}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": token,\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        (response) => {\r\n          userData.user.following.push(username);\r\n          setUserData({\r\n            ...userData,\r\n            user: {\r\n              ...userData.user,\r\n              following: userData.user.following,\r\n            },\r\n          });\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  const deleteFollower = async (username) => {\r\n    const token = localStorage.getItem(\"auth-token\");\r\n    await axios\r\n      .patch(\r\n        `https://app-litsoc.herokuapp.com/user/deleteFollower/${username}`,\r\n        null,\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": token,\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        (response) => {\r\n          setUserData({\r\n            ...userData,\r\n            user: {\r\n              ...userData.user,\r\n              following: userData.user.following.filter(\r\n                (item) => item !== username\r\n              ),\r\n            },\r\n          });\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handleFollowButton = () => {\r\n    if (isFollowed === false) {\r\n      addFollower(secondUserData.username);\r\n    } else {\r\n      deleteFollower(secondUserData.username);\r\n    }\r\n    setIsFollowed((prevState) => !prevState);\r\n  };\r\n  //For Horizontal Tabs: Posts and Comments\r\n  const [value2, setValue2] = useState(0);\r\n\r\n  const handleChange2 = (event, newValue) => {\r\n    setValue2(newValue);\r\n  };\r\n  const hashGenerator = (user) => {\r\n    let hash = 0,\r\n      i,\r\n      chr;\r\n    if (user)\r\n      for (i = 0; i < user.length; i++) {\r\n        chr = user.charCodeAt(i);\r\n        hash = (hash << 5) - hash + chr;\r\n        hash |= 0; // Convert to 32bit integer\r\n      }\r\n    return hash + 2147483647 + 1;\r\n  };\r\n  if (secondUserData)\r\n    return (\r\n      <div style={{ backgroundColor: \"#16161A\" }}>\r\n        {/* <video\r\n          autoPlay\r\n          muted\r\n          loop\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            objectFit: \"cover\",\r\n            transform: \"translate(-50%,-50%)\",\r\n            zIndex: \"-1\",\r\n          }}\r\n        >\r\n          <source src={bg} type=\"video/mp4\" />\r\n        </video> */}\r\n        <SwipeDrawer isFalse={1} />\r\n        <Container fluid={1} className=\"pt-4 mt-sm-0 pt-sm-0\">\r\n          <Row>\r\n            <Col className=\"bg-dark ml-auto mt-3\" sm={2}>\r\n              <div className=\"w-100 text-center\">\r\n                <Image\r\n                  className=\"my-3 profilePic\"\r\n                  src={\r\n                    secondUserData.imgId !== \"false\"\r\n                      ? `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${secondUserData.username}?alt=media`\r\n                      : photo\r\n                  }\r\n                  roundedCircle\r\n                  height=\"160\"\r\n                  width=\"160\"\r\n                />\r\n                <h4 className=\"text-secondary\">\r\n                  {secondUserData.firstName + \" \" + secondUserData.lastName}\r\n                </h4>\r\n              </div>\r\n              <Dropdown.Divider />\r\n              {userData.user ? (\r\n                secondUserData.username !== userData.user.username ? (\r\n                  <Row className=\"mt-4 mb-5\">\r\n                    <Col xs={isFollowed ? 4 : 12} sm={isFollowed ? 4 : 12}>\r\n                      <div className=\"w-100 text-center\">\r\n                        <Button\r\n                          variant=\"outline-info\"\r\n                          onClick={handleFollowButton}\r\n                          className={isFollowed ? \"\" : \"ml-auto\"}\r\n                        >\r\n                          {isFollowed ? \"Following\" : \"Follow\"}\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                    <Col xs={4} sm={5} className=\"ml-auto\">\r\n                      {isFollowed ? (\r\n                        <NavLink\r\n                          onClick={(event) =>\r\n                            userData.user ? null : event.preventDefault()\r\n                          }\r\n                          to={{\r\n                            pathname: \"/chat\",\r\n                            search: `?name=${userData.user.username}&room=${\r\n                              hashGenerator(userData.user.username) +\r\n                              hashGenerator(secondUserData.username)\r\n                            }&otherUser=${secondUserData.username}`,\r\n                          }}\r\n                        >\r\n                          <Button variant=\"outline-info\">Message</Button>\r\n                        </NavLink>\r\n                      ) : null}\r\n                    </Col>\r\n                    <Col sm={1} />\r\n                  </Row>\r\n                ) : null\r\n              ) : null}\r\n              <div className={classes.root}>\r\n                <Tabs\r\n                  orientation={width > 768 ? \"vertical\" : \"horizontal\"}\r\n                  variant=\"scrollable\"\r\n                  scrollButtons={width < 768 ? \"on\" : \"off\"}\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  aria-label=\"Vertical tabs example\"\r\n                  className={classes.tabs}\r\n                >\r\n                  <Tab\r\n                    className=\"py-4 py-sm-0 mt-sm-3 mb-sm-3 bg-primary\"\r\n                    label=\"Timeline\"\r\n                    {...a11yProps(0)}\r\n                  />\r\n                  <Tab\r\n                    className=\"py-4 py-sm-0 mb-sm-3 bg-primary\"\r\n                    label=\"Followers\"\r\n                    {...a11yProps(1)}\r\n                  />\r\n                  <Tab\r\n                    className=\"py-4 py-sm-0 mb-sm-3 bg-primary\"\r\n                    label=\"Following\"\r\n                    {...a11yProps(2)}\r\n                  />\r\n                </Tabs>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"bg-primary mt-3\" sm={10}>\r\n              <TabPanel value={value} index={0}>\r\n                <Container fluid={1}>\r\n                  <Col>\r\n                    <Row>\r\n                      <div className={classes.root2}>\r\n                        <Tabs\r\n                          value={value2}\r\n                          onChange={handleChange2}\r\n                          aria-label=\"Horizontal tabs\"\r\n                          className={classes.tabs}\r\n                        >\r\n                          <Tab\r\n                            className=\"my-3 mx-1 bg-primary\"\r\n                            label=\"Posts\"\r\n                            {...a11yProps(0)}\r\n                          />\r\n                          <Tab\r\n                            className=\"my-3 mx-1 bg-primary\"\r\n                            label=\"Comments\"\r\n                            {...a11yProps(1)}\r\n                          />\r\n                        </Tabs>\r\n                      </div>\r\n                      <TabPanel value={value2} index={0}>\r\n                        <Posts\r\n                          secondUserProfile={true}\r\n                          secondUserId={secondUserData}\r\n                        />\r\n                      </TabPanel>\r\n                      <TabPanel value={value2} index={1}>\r\n                        <UserComments username={secondUserData.username} />\r\n                      </TabPanel>\r\n                    </Row>\r\n                  </Col>\r\n                </Container>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1}>\r\n                <Followers otherUser={secondUserData} />\r\n              </TabPanel>\r\n              <TabPanel value={value} index={2}>\r\n                <Following otherUser={secondUserData} />\r\n              </TabPanel>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  else\r\n    return (\r\n      <div>\r\n        Redirecting... if you are not redirect in 5 seconds please refresh the\r\n        page.\r\n      </div>\r\n    );\r\n};\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default SecondUser;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Stories.js",["220"],"import SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\n\r\nimport { useState } from \"react\";\r\nconst Stories = () => {\r\n  const [category, setCategory] = useState(\"Story\");\r\n  return (\r\n    <div\r\n      style={{\r\n        //   backgroundAttachment: \"fixed\",\r\n        //   backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer\r\n        isFalse={0}\r\n        defValue={2}\r\n        category={category}\r\n        setCategory={setCategory}\r\n        showSearch={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Stories;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Summaries.js",["221"],"import SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst Summaries = () => {\r\n  const [category, setCategory] = useState(\"Summary\");\r\n  return (\r\n    <div\r\n      style={{\r\n        //   backgroundAttachment: \"fixed\",\r\n        //   backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* {\" \"}\r\n      <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer\r\n        isFalse={0}\r\n        defValue={3}\r\n        category={category}\r\n        setCategory={setCategory}\r\n        showSearch={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Summaries;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\ViewPost.js",["222"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp, faThumbsDown } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\n\r\nimport Comments from \"./Comment\";\r\nimport axios from \"../axios\";\r\nimport moment from \"moment\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport MyAudioPlayer from \"./AudioPlayer/MyAudioPlayer\";\r\n\r\nconst ViewPost = ({ match }) => {\r\n  const [post, setPost] = useState();\r\n  const { userData } = useContext(UserContext);\r\n  const [userLiked, setUserLiked] = useState(false);\r\n  const [postLiked, setPostLiked] = useState(false);\r\n  const [userDisliked, setUserDisliked] = useState(false);\r\n  const [postDisliked, setPostDisliked] = useState(false);\r\n  const [relatedPost, setRelatedPost] = useState(undefined);\r\n  useEffect(() => {\r\n    const fetchPost = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          `https://app-litsoc.herokuapp.com/post/${match.params.id}`\r\n        );\r\n        if (res.data.similarPosts.length > 0) {\r\n          let relPost =\r\n            res.data.similarPosts[\r\n              Math.floor(\r\n                Math.random() * (res.data.similarPosts.length - 0 + 1)\r\n              ) + 0\r\n            ];\r\n          axios\r\n            .get(\r\n              `https://app-litsoc.herokuapp.com/post/${\r\n                relPost ? relPost.Post_Id : undefined\r\n              }`\r\n            )\r\n            .then((data) => setRelatedPost(data.data));\r\n        }\r\n        setPost(res.data);\r\n        userData.user\r\n          ? axios.patch(\r\n              `https://app-litsoc.herokuapp.com/post/views/${match.params.id}`,\r\n              { user: userData.user.id }\r\n            )\r\n          : axios.patch(\r\n              `https://app-litsoc.herokuapp.com/post/views/${match.params.id}`\r\n            );\r\n        setUserLiked(\r\n          res.data.likes.includes(userData.user ? userData.user.id : null)\r\n        );\r\n        setUserDisliked(\r\n          res.data.dislikes.includes(userData.user ? userData.user.id : null)\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchPost();\r\n  }, [match.params.id, userData.user]);\r\n  const checkImage = (userImage, username) => {\r\n    if (userImage === \"true\") {\r\n      return `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${username}?alt=media`;\r\n    }\r\n    return \"https://app-litsoc.herokuapp.com/image/guest\";\r\n  };\r\n  if (post) {\r\n    return (\r\n      <div\r\n        style={{\r\n          // backgroundAttachment: \"fixed\",\r\n          // backgroundImage: `url(${bg})`,\r\n          backgroundColor: \"#16161A\",\r\n        }}\r\n      >\r\n        {/* <video\r\n          autoPlay\r\n          muted\r\n          loop\r\n          style={{\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            objectFit: \"cover\",\r\n            transform: \"translate(-50%,-50%)\",\r\n            zIndex: \"-1\",\r\n          }}\r\n        >\r\n          <source src={bg} type=\"video/mp4\" />\r\n        </video> */}\r\n        <SwipeDrawer isFalse={1} />\r\n        <div className=\"container mt-4 bg-primary text-light rounded\">\r\n          <div className=\"row\">\r\n            {/* <!-- Post Content Column --> */}\r\n            <div className=\"col-lg-8\">\r\n              {/* <!-- Title --> */}\r\n              <h1 className=\"mt-4 font-weight-bold font-xs-130\">\r\n                {post.title}\r\n              </h1>\r\n              {/* <!-- Author --> */}\r\n              <h5 className=\"text-info text-decoration-none font-xs-100\">\r\n                {post.category[0]}\r\n                {post.category[1] ? \" | \" + post.category[1] : \"\"}\r\n              </h5>\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6 pl-0\">\r\n                    <a\r\n                      href={`/secondUser/${post.userid}`}\r\n                      className=\"text-decoration-none text-light font-xs-100\"\r\n                    >\r\n                      <h5>{post.name}</h5>\r\n                    </a>\r\n                  </div>\r\n                  {/* <!-- Date/Time --> */}\r\n                  <div className=\"col-6 text-right font-xs-100 pr-0\">\r\n                    <p>Posted on {moment(post.time).format(\"LLL\")}</p>\r\n                  </div>\r\n                </div>\r\n                {/* <!-- Post Content --> */}\r\n              </div>\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"font-weight-normal font-xs-100 text-secondary\">\r\n                <p>Post Description - \"{post.description}\"</p>\r\n              </div>\r\n              <hr className=\"bg-light\" />\r\n              {/* <!-- Preview Image --> */}\r\n              {/* <ReactAudioPlayer\r\n                    src={`https://app-litsoc.herokuapp.com/files/${post.fileName}`}\r\n                    controls\r\n                    controlsList=\"nodownload\"\r\n                    volume={0.5}\r\n                    onListen={handleViews}\r\n                    onCanPlay={() => {\r\n                      setCanPlay(true);\r\n                    }}\r\n                  /> */}\r\n              <MyAudioPlayer filename={post.fileName} postId={post._id} />\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-3 col-12 mt-3 my-lg-auto\">\r\n                  <Button\r\n                    className=\"mr-1 text-light bg-primary border-dark text-decoration-none\"\r\n                    onClick={() => {\r\n                      const token = localStorage.getItem(\"auth-token\");\r\n                      axios\r\n                        .patch(\r\n                          `https://app-litsoc.herokuapp.com/post/likes/${post._id}`,\r\n                          null,\r\n                          { headers: { \"x-auth-token\": token } }\r\n                        )\r\n                        .then((res) => {\r\n                          setPostLiked((prevState) => !prevState);\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                        });\r\n                    }}\r\n                  >\r\n                    {userLiked\r\n                      ? postLiked\r\n                        ? post.likes.length - 1\r\n                        : post.likes.length\r\n                      : postLiked\r\n                      ? post.likes.length + 1\r\n                      : post.likes.length}{\" \"}\r\n                    {userLiked ? (\r\n                      postLiked ? (\r\n                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                      ) : (\r\n                        <FontAwesomeIcon\r\n                          icon={faThumbsUp}\r\n                          className=\"text-danger\"\r\n                        />\r\n                      )\r\n                    ) : postLiked ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faThumbsUp}\r\n                        className=\"text-danger\"\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon icon={faThumbsUp} />\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    className=\"mr-1 text-light bg-primary border-dark text-decoration-none\"\r\n                    onClick={() => {\r\n                      const token = localStorage.getItem(\"auth-token\");\r\n                      axios\r\n                        .patch(\r\n                          `https://app-litsoc.herokuapp.com/post/dislikes/${post._id}`,\r\n                          null,\r\n                          { headers: { \"x-auth-token\": token } }\r\n                        )\r\n                        .then((res) => {\r\n                          setPostDisliked((prevState) => !prevState);\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                        });\r\n                    }}\r\n                  >\r\n                    {userDisliked\r\n                      ? postDisliked\r\n                        ? post.dislikes.length - 1\r\n                        : post.dislikes.length\r\n                      : postDisliked\r\n                      ? post.dislikes.length + 1\r\n                      : post.dislikes.length}{\" \"}\r\n                    {userDisliked ? (\r\n                      postDisliked ? (\r\n                        <FontAwesomeIcon icon={faThumbsDown} />\r\n                      ) : (\r\n                        <FontAwesomeIcon\r\n                          icon={faThumbsDown}\r\n                          className=\"text-danger\"\r\n                        />\r\n                      )\r\n                    ) : postDisliked ? (\r\n                      <FontAwesomeIcon\r\n                        icon={faThumbsDown}\r\n                        className=\"text-danger\"\r\n                      />\r\n                    ) : (\r\n                      <FontAwesomeIcon icon={faThumbsDown} />\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n                <div className=\"col-lg-2\"></div>\r\n              </div>\r\n              <hr className=\"bg-light\" />\r\n              {/* <!-- Comments Form --> */}\r\n              <div className=\"media mt-4\">\r\n                <div className=\"media-body\">\r\n                  <Comments postId={match.params.id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <!-- Sidebar Widgets Column --> */}\r\n            <div className=\"col-md-4\">\r\n              <div className=\"card my-4 bg-dark text-light\">\r\n                <h5 className=\"card-header border-secondary\">Tags</h5>\r\n                <div className=\"card-body\">\r\n                  <h6>\r\n                    {post.genres.map((genre) => (\r\n                      <Badge pill className=\"mx-2 mt-1\" variant=\"info\">\r\n                        {genre}\r\n                      </Badge>\r\n                    ))}\r\n                  </h6>\r\n                </div>\r\n              </div>\r\n              {/* <!-- Side Widget --> */}\r\n              {relatedPost ? (\r\n                <div className=\"card my-4 bg-dark\">\r\n                  <h5 className=\"card-header border-secondary text-light\">\r\n                    Related Post\r\n                  </h5>\r\n                  <div className=\"card-body\">\r\n                    <Link\r\n                      to={`/viewpost/${relatedPost._id}`}\r\n                      className=\"text-decoration-none\"\r\n                    >\r\n                      <h4 className=\"font-weight-bold card-headline font-xs-130\">\r\n                        {relatedPost.title}\r\n                      </h4>\r\n                    </Link>\r\n                    <h6 className=\"text-muted card-paragraph font-xs-100\">\r\n                      {relatedPost.category && relatedPost.category[0]}{\" \"}\r\n                      {relatedPost.category && relatedPost.category[1]\r\n                        ? \"| \" + relatedPost.category[1]\r\n                        : \"\"}\r\n                    </h6>\r\n                    <div className=\"font-weight-normal text-secondary font-xs-100\">\r\n                      <p>\r\n                        Description -{\" \"}\r\n                        {relatedPost.description\r\n                          ? relatedPost.description.slice(0, 400)\r\n                          : null}\r\n                        ...\r\n                        <strong>\r\n                          <Link\r\n                            to={`/viewpost/${relatedPost._id}`}\r\n                            className=\"text-light\"\r\n                          >\r\n                            Read More\r\n                          </Link>\r\n                        </strong>\r\n                      </p>\r\n                    </div>\r\n                    <h6>\r\n                      {relatedPost.genres &&\r\n                        relatedPost.genres.map((genre) => (\r\n                          <Badge pill className=\"mx-2 mt-1 p-1\" variant=\"info\">\r\n                            {genre}\r\n                          </Badge>\r\n                        ))}\r\n                    </h6>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-5\">\r\n                        <Image\r\n                          src={checkImage(\r\n                            relatedPost.userImage,\r\n                            relatedPost.username\r\n                          )}\r\n                          roundedCircle\r\n                          height=\"120\"\r\n                          className=\"mr-md-3 my-2 postProfilePic\"\r\n                          width=\"120\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-7 my-auto\">\r\n                        <Link\r\n                          to={`/secondUser/${relatedPost.userid}`}\r\n                          className=\"text-decoration-none\"\r\n                        >\r\n                          <h5 className=\"font-weight-bold text-light\">\r\n                            {relatedPost.name}\r\n                          </h5>\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n          {/* <!-- /.row --> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      Redirecting... if you are not redirect in 5 seconds please refresh the\r\n      page.\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\App.js",["223"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport logo from \"./photos/logo2.png\";\nimport { Image, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport bg from \"./photos/video.mp4\";\nconst App = () => {\n  useEffect(() => {\n    setTimeout(() => setLoading(false), 4000);\n  }, []);\n  const [loading, setLoading] = useState(true);\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          marginTop: \"-24px !important\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          height: \"100vh\",\n          alignItems: \"center\",\n          backgroundColor: \"#16161A\",\n        }}\n      >\n        {/* <video\n          autoPlay\n          muted\n          loop\n          style={{\n            position: \"fixed\",\n            width: \"100%\",\n            height: \"100%\",\n            top: \"50%\",\n            left: \"50%\",\n            objectFit: \"cover\",\n            transform: \"translate(-50%,-50%)\",\n            zIndex: \"-1\",\n          }}\n        >\n          <source src={bg} type=\"video/mp4\" />\n        </video> */}\n        <div\n          style={{\n            width: \"50%\",\n          }}\n        >\n          <h1 className=\"text-light\">Welcome to </h1>\n          <Image src={logo} alt=\"litsoc\" width=\"200\" height=\"200\" rounded />\n        </div>\n        <div\n          style={{\n            marginTop: \"2%\",\n          }}\n        >\n          {loading && (\n            <FontAwesomeIcon\n              className=\"text-info\"\n              icon={faSpinner}\n              size=\"2x\"\n              pulse\n            />\n          )}\n          {loading && <h5 className=\"text-light\">Loading Content...</h5>}\n          {!loading && (\n            <NavLink to=\"/home\">\n              <Button variant=\"info\">Get Started!</Button>\n            </NavLink>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Chat\\Chat.js",["224","225"],"import React, { useState, useEffect, useContext } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport Messages from \"../Messages/Messages\";\nimport InfoBar from \"../InfoBar/InfoBar\";\nimport Input from \"../Input/Input\";\nimport axios from \"../../axios\";\nimport SwipeDrawer from \"../../SwipeDrawer\";\nimport UserContext from \"../../context/UserContext\";\nimport bg from \"../../photos/video.mp4\";\nimport \"./Chat.css\";\n\nconst ENDPOINT = \"https://chat-litsoc.herokuapp.com/\";\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [otherUser, setOtherUser] = useState(\"\");\n  const [users, setUsers] = useState(\"\");\n  const { userData } = useContext(UserContext);\n  useEffect(() => {\n    const { name, room, otherUser } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setOtherUser(otherUser);\n    setRoom(room);\n    setName(name);\n    socket.emit(\"join\", { name, room }, (error) => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [location.search]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({ users }) => {\n      setUsers(users);\n    });\n    return () => {\n      socket.close();\n    };\n  }, []);\n  const sendMessage = (event) => {\n    event.preventDefault();\n    const token = localStorage.getItem(\"auth-token\");\n    if (message && message.trim().length) {\n      socket.emit(\"sendMessage\", message, async () => {\n        setMessage(\"\");\n        await axios.post(\n          \"https://chat-litsoc.herokuapp.com/chat/messages\",\n          {\n            message: message,\n            room: room,\n            readStatus: users.length > 1 ? true : false,\n            receiver: otherUser,\n          },\n          { headers: { \"x-auth-token\": token } }\n        );\n      });\n    }\n  };\n\n  return (\n    <div className=\"outerContainer\">\n      {/* <video\n        autoPlay\n        muted\n        loop\n        style={{\n          position: \"fixed\",\n          width: \"100%\",\n          height: \"100%\",\n          top: \"50%\",\n          left: \"50%\",\n          objectFit: \"cover\",\n          transform: \"translate(-50%,-50%)\",\n          zIndex: \"-1\",\n        }}\n      >\n        <source src={bg} type=\"video/mp4\" />\n      </video> */}\n      <SwipeDrawer isFalse={1} />\n      <div className=\"innerContainer py-5\">\n        <InfoBar room={room} otherUser={otherUser} />\n        <Messages messages={messages} name={name} room={room} />\n        <Input\n          message={message}\n          setMessage={setMessage}\n          sendMessage={sendMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n",["226","227"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Join\\Join.js",["228","229","230"],"import React, { useState, useContext, useEffect } from \"react\";\nimport UserContext from \"../../context/UserContext\";\nimport SwipeDrawer from \"../../SwipeDrawer\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Join.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport bg from \"../../photos/video.mp4\";\n\nconst JoinChat = () => {\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const { userData } = useContext(UserContext);\n  const [recentChats, setRecentChats] = useState();\n  const hashGenerator = (user) => {\n    let hash = 0,\n      i,\n      chr;\n    for (i = 0; i < user.length; i++) {\n      chr = user.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash + 2147483647 + 1;\n  };\n  useEffect(() => {\n    if (userData.user) {\n      setName(userData.user.username);\n      setRecentChats(\n        userData.user.followers.filter(\n          (username) => username && userData.user.following.includes(username)\n        )\n      );\n    }\n  }, [userData.user]);\n  return (\n    <>\n      {/* <video\n        autoPlay\n        muted\n        loop\n        style={{\n          position: \"fixed\",\n          width: \"100%\",\n          height: \"100%\",\n          top: \"50%\",\n          left: \"50%\",\n          objectFit: \"cover\",\n          transform: \"translate(-50%,-50%)\",\n          zIndex: \"-1\",\n        }}\n      >\n        <source src={bg} type=\"video/mp4\" />\n      </video> */}\n      <SwipeDrawer isFalse={1} />\n      <div className=\"joinOuterContainer\">\n        <div className=\"joinInnerContainer\">\n          <h1 className=\"heading\">Litsoc Chat</h1>\n          {userData.user && recentChats ? (\n            recentChats.map((user, index) => (\n              <NavLink\n                key={index}\n                onClick={(event) =>\n                  userData.user ? null : event.preventDefault()\n                }\n                to={{\n                  pathname: \"/chat\",\n                  search: `?name=${name}&room=${\n                    hashGenerator(userData.user.username) + hashGenerator(user)\n                  }&otherUser=${user}`,\n                }}\n              >\n                <button className=\"button mt-2\" type=\"submit\">\n                  {user}\n                </button>\n              </NavLink>\n            ))\n          ) : (\n            <FontAwesomeIcon icon={faSpinner} className=\"text-light\" spin />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\nexport default JoinChat;\n","C:\\Users\\shash\\front_bootstrap\\src\\Routes.js",[],["231","232"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\ProfileTab.js",["233"],"import SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\nconst ProfileTab = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        //   backgroundAttachment: \"fixed\",\r\n        //   backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer isFalse={0} defValue={6} />\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileTab;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\context\\UserContext.js",[],["234","235"],"C:\\Users\\shash\\front_bootstrap\\src\\base.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Comment.js",["236","237"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport axios from \"../axios\";\r\nimport moment from \"moment\";\r\nimport { Accordion, Image, Button } from \"react-bootstrap\";\r\nimport CommentReply from \"./CommentReply\";\r\nimport CreateComment from \"./CreateComment\";\r\nimport CreateCommentReply from \"./CreateCommentReply\";\r\nconst Comments = ({ postId }) => {\r\n  const [comments, setComments] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const comments = await axios.get(\r\n        `https://app-litsoc.herokuapp.com/comment/all/${postId}`\r\n      );\r\n      setComments(comments.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const checkImage = (userImage, username) => {\r\n    if (userImage !== \"false\") {\r\n      return `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${username}?alt=media`;\r\n    }\r\n    return \"https://app-litsoc.herokuapp.com/image/guest\";\r\n  };\r\n  if (comments)\r\n    return (\r\n      <div className=\"container bg-dark\">\r\n        <CreateComment postId={postId} />\r\n        {comments.map((comment) => (\r\n          <div className=\"card bg-dark border-0\">\r\n            <div className=\"card-body\">\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"row my-2\">\r\n                <div className=\"col-md-2 col-3\">\r\n                  <Image\r\n                    src={checkImage(comment.userImage, comment.username)}\r\n                    roundedCircle\r\n                    width=\"90\"\r\n                    height=\"90\"\r\n                    className=\"commentPic\"\r\n                  />\r\n                  <p className=\"text-muted text-center small\">\r\n                    {moment(comment.time).format(\"lll\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-10 col-9\">\r\n                  <p>\r\n                    <a\r\n                      className=\"float-left text-light text-decoration-none\"\r\n                      href={`/secondUser/${comment.userId}`}\r\n                    >\r\n                      <strong>{comment.username}</strong>\r\n                    </a>\r\n                  </p>\r\n                  <div className=\"clearfix\"></div>\r\n                  <p>{comment.content}</p>\r\n                  <Accordion>\r\n                    <Accordion.Toggle\r\n                      eventKey=\"0\"\r\n                      className=\"btn btn-outline-secondary text-light\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faReply} /> Reply\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\" className=\"mt-3\">\r\n                      <CreateCommentReply\r\n                        parentId={comment._id}\r\n                        postId={postId}\r\n                      />\r\n                    </Accordion.Collapse>\r\n                  </Accordion>\r\n                </div>\r\n              </div>\r\n              <Accordion>\r\n                <Accordion.Toggle\r\n                  as={Button}\r\n                  variant=\"link\"\r\n                  eventKey=\"0\"\r\n                  className=\"text-decoration-none text-light\"\r\n                >\r\n                  <h6>View Replies</h6>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <CommentReply parentId={comment._id} />\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  else return <div>Loading...</div>;\r\n};\r\n\r\nexport default Comments;\r\n",["238","239"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Following.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Input\\Input.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\PopularGenres.js",[],["240","241"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Profile.js",["242"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport Posts from \"./Posts\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport Followers from \"./Followers\";\r\nimport Following from \"./Following\";\r\nimport UserContext from \"../context/UserContext\";\r\nimport photo from \"../photos/guest.png\";\r\nimport Settings from \"./Settings\";\r\nimport UserComments from \"./UserComments\";\r\n\r\nconst Profile = () => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const updateDimensions = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    return () => window.removeEventListener(\"resize\", updateDimensions);\r\n  }, []);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 0,\r\n      height: width > 768 ? 450 : \"auto\",\r\n    },\r\n    root2: {\r\n      flexGrow: 1,\r\n    },\r\n    tabs: {\r\n      alignItems: \"center\",\r\n      color: \"white\",\r\n    },\r\n    tabs2: {\r\n      alignItems: \"center\",\r\n      color: \"white\",\r\n    },\r\n  }));\r\n  const { userData } = useContext(UserContext);\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  //For Horizontal Tabs: Posts and Comments\r\n  const [value2, setValue2] = useState(0);\r\n\r\n  const handleChange2 = (event, newValue) => {\r\n    setValue2(newValue);\r\n  };\r\n  return (\r\n    <Container fluid={1} className=\"pt-4 mt-sm-0 pt-sm-0\">\r\n      <Row>\r\n        <Col className=\"bg-dark ml-auto mt-3\" sm={2}>\r\n          <div className=\"w-100 text-center\">\r\n            <Image\r\n              className=\"my-3 profilePic\"\r\n              src={\r\n                userData.user && userData.user.imgId !== \"false\"\r\n                  ? `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${userData.user.username}?alt=media`\r\n                  : photo\r\n              }\r\n              roundedCircle\r\n              height=\"160\"\r\n              width=\"160\"\r\n            />\r\n            <h4 className=\"text-secondary\">\r\n              {userData.user\r\n                ? userData.user.firstName + \" \" + userData.user.lastName\r\n                : \"Loading...\"}\r\n            </h4>\r\n          </div>\r\n          <Dropdown.Divider />\r\n          <div className={classes.root}>\r\n            <Tabs\r\n              orientation={width > 768 ? \"vertical\" : \"horizontal\"}\r\n              variant=\"scrollable\"\r\n              scrollButtons={width > 768 ? \"off\" : \"on\"}\r\n              value={value}\r\n              onChange={handleChange}\r\n              className={classes.tabs}\r\n            >\r\n              <Tab\r\n                className=\"py-4 py-sm-0 mt-sm-3 mb-sm-3 bg-primary\"\r\n                label=\"Timeline\"\r\n                {...a11yProps(0)}\r\n              />\r\n              <Tab\r\n                className=\"py-4 py-sm-0 mb-sm-3 bg-primary\"\r\n                label=\"Create Post\"\r\n                {...a11yProps(1)}\r\n              />\r\n              <Tab\r\n                className=\"py-4 py-sm-0 mb-sm-3 bg-primary\"\r\n                label=\"Followers\"\r\n                {...a11yProps(2)}\r\n              />\r\n              <Tab\r\n                className=\"py-4 py-sm-0 mb-sm-3 bg-primary\"\r\n                label=\"Following\"\r\n                {...a11yProps(3)}\r\n              />\r\n              <Tab\r\n                className=\"py-4 mb-sm-3 py-sm-0 bg-primary\"\r\n                label=\"Settings\"\r\n                {...a11yProps(4)}\r\n              />\r\n            </Tabs>\r\n          </div>\r\n        </Col>\r\n        <Col className=\"bg-primary mt-3\" sm={10}>\r\n          <TabPanel value={value} index={0}>\r\n            <Container fluid={1}>\r\n              <Col>\r\n                <Row>\r\n                  <div className={classes.root2}>\r\n                    <Tabs\r\n                      value={value2}\r\n                      onChange={handleChange2}\r\n                      aria-label=\"Horizontal tabs\"\r\n                      className={classes.tabs2}\r\n                    >\r\n                      <Tab\r\n                        className=\"my-3 mx-1 bg-primary\"\r\n                        label=\"Posts\"\r\n                        {...a11yProps(0)}\r\n                      />\r\n                      <Tab\r\n                        className=\"my-3 mx-1 bg-primary\"\r\n                        label=\"Comments\"\r\n                        {...a11yProps(1)}\r\n                      />\r\n                    </Tabs>\r\n                  </div>\r\n                  <TabPanel value={value2} index={0}>\r\n                    <Posts myProfile={true} />\r\n                  </TabPanel>\r\n                  <TabPanel value={value2} index={1}>\r\n                    <UserComments\r\n                      username={userData.user ? userData.user.username : null}\r\n                    />\r\n                  </TabPanel>\r\n                </Row>\r\n              </Col>\r\n            </Container>\r\n          </TabPanel>\r\n          <TabPanel value={value} index={1}>\r\n            <CreatePost />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={2}>\r\n            <Followers />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={3}>\r\n            <Following />\r\n          </TabPanel>\r\n          <TabPanel value={value} index={4}>\r\n            <Settings />\r\n          </TabPanel>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\CommentReply.js",["243","244","245","246","247"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport { Accordion, Button, Image } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport CreateCommentReply from \"./CreateCommentReply\";\r\nconst CommentReply = ({ parentId }) => {\r\n  const [replies, setReplies] = useState();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(\r\n        `https://app-litsoc.herokuapp.com/comment/reply/all/${parentId}`\r\n      );\r\n      setReplies(res.data);\r\n    };\r\n    fetchData();\r\n  }, [parentId]);\r\n  const checkImage = (userImage, username) => {\r\n    if (userImage !== \"false\") {\r\n      return `https://firebasestorage.googleapis.com/v0/b/litsoc-a8678.appspot.com/o/${username}?alt=media`;\r\n    }\r\n    return \"https://app-litsoc.herokuapp.com/image/guest\";\r\n  };\r\n  if (replies)\r\n    return (\r\n      <>\r\n        {replies.map((reply) => (\r\n          <div className=\"card card-inner mb-2 bg-dark  border-0\">\r\n            <div className=\"card-body\">\r\n              <hr className=\"bg-light\" />\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-md-2 col-3\">\r\n                  <Image\r\n                    src={checkImage(reply.userImage, reply.username)}\r\n                    roundedCircle\r\n                    width=\"90\"\r\n                    height=\"90\"\r\n                    className=\"commentPic\"\r\n                  />\r\n                  <p className=\"text-muted text-center small\">\r\n                    {moment(reply.time).format(\"lll\")}\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-10 col-9\">\r\n                  <p>\r\n                    <a\r\n                      className=\"float-left text-light text-decoration-none\"\r\n                      href={`/secondUser/${reply.userId}`}\r\n                    >\r\n                      <strong>{reply.username}</strong>\r\n                    </a>\r\n                  </p>\r\n                  <div className=\"clearfix\"></div>\r\n                  <p>{reply.content}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n  else return <div>Loading...</div>;\r\n};\r\n\r\nexport default CommentReply;\r\n",["248","249"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\ErrorNotice.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\CreatePost.js",[],["250","251"],"C:\\Users\\shash\\front_bootstrap\\src\\index.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\axios.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Analysis.js",["252"],"import SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\nimport { useState } from \"react\";\r\nconst Analysis = () => {\r\n  const [category, setCategory] = useState(\"Analysis\");\r\n  return (\r\n    <div\r\n      style={{\r\n        //   backgroundAttachment: \"fixed\",\r\n        //   backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer\r\n        isFalse={0}\r\n        defValue={5}\r\n        category={category}\r\n        setCategory={setCategory}\r\n        showSearch={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Analysis;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Home.js",["253"],"import { useState } from \"react\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport SwipeDrawer from \"../SwipeDrawer\";\r\nimport bg from \"../photos/video.mp4\";\r\nconst Home = () => {\r\n  const [category, setCategory] = useState();\r\n  return (\r\n    <div\r\n      className=\"App\"\r\n      style={{\r\n        // backgroundSize: \"cover\",\r\n        // backgroundAttachment: \"fixed\",\r\n        // backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer\r\n        category={category}\r\n        setCategory={setCategory}\r\n        showSearch={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\SwipeDrawer.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\InfoBar\\InfoBar.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SearchBox.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Notifications.js",["254"],"import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport Notification from \"./Notification\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Col,\r\n  Row,\r\n  Badge,\r\n  Toast,\r\n  ToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Notifications = () => {\r\n  const { userData } = useContext(UserContext);\r\n  const [recentChats, setRecentChats] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [value, setValue] = useState([1, 3]);\r\n  const [badge, setBadge] = useState(0);\r\n  const [notification, setNotification] = useState([]);\r\n  const notificationToastRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (userData.user) {\r\n      setRecentChats(\r\n        userData.user.followers.filter(\r\n          (username) => username && userData.user.following.includes(username)\r\n        )\r\n      );\r\n    }\r\n  }, [userData.user]);\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (\r\n        notificationToastRef.current &&\r\n        !notificationToastRef.current.contains(event.target)\r\n      ) {\r\n        setShow(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [notificationToastRef]);\r\n  const hashGenerator = (user) => {\r\n    let hash = 0,\r\n      i,\r\n      chr;\r\n    for (i = 0; i < user.length; i++) {\r\n      chr = user.charCodeAt(i);\r\n      hash = (hash << 5) - hash + chr;\r\n      hash |= 0; // Convert to 32bit integer\r\n    }\r\n    return hash + 2147483647 + 1;\r\n  };\r\n  if (userData.user && recentChats)\r\n    return (\r\n      <div className=\"ml-3\">\r\n        <Col>\r\n          <Row\r\n            style={{\r\n              position: \"relative\",\r\n            }}\r\n            className=\"float-right\"\r\n          >\r\n            <ToggleButtonGroup\r\n              type=\"checkbox\"\r\n              value={value}\r\n              onChange={() => setShow(!show)}\r\n            >\r\n              <ToggleButton value={false}>\r\n                <FontAwesomeIcon icon={faBell} />\r\n                <Badge variant=\"danger\">\r\n                  {recentChats.map((user, index) => (\r\n                    <Notification\r\n                      key={index}\r\n                      room={\r\n                        hashGenerator(userData.user.username) +\r\n                        hashGenerator(user)\r\n                      }\r\n                      user={user}\r\n                      setNotification={setNotification}\r\n                      notification={notification}\r\n                      setBadge={setBadge}\r\n                      badge={badge}\r\n                    />\r\n                  ))}\r\n                  {badge}\r\n                </Badge>\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </Row>\r\n          <Row>\r\n            <Toast\r\n              style={{\r\n                position: \"absolute\",\r\n                top: 45,\r\n                right: 0,\r\n                background: \"white\",\r\n                width: 250,\r\n              }}\r\n              onClose={() => setShow(false)}\r\n              show={show}\r\n              ref={notificationToastRef}\r\n            >\r\n              <Toast.Header className=\"text-info\">\r\n                <strong className=\"ml-auto\">Notifications</strong>\r\n              </Toast.Header>\r\n              <Toast.Body className=\"text-primary\">\r\n                {notification.length > 0 ? (\r\n                  notification.map((item, index) => (\r\n                    <div>\r\n                      <NavLink\r\n                        key={index}\r\n                        to={{\r\n                          pathname: \"/chat\",\r\n                          search: `?name=${userData.user.username}&room=${\r\n                            hashGenerator(userData.user.username) +\r\n                            hashGenerator(item.user)\r\n                          }&otherUser=${item.user}`,\r\n                        }}\r\n                      >\r\n                        ( {item.number} ) new messages from {item.user}\r\n                      </NavLink>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div>No new notifications</div>\r\n                )}\r\n              </Toast.Body>\r\n            </Toast>\r\n          </Row>\r\n          <Divider />\r\n        </Col>\r\n      </div>\r\n    );\r\n  else return <div>No new notifications</div>;\r\n};\r\n\r\nexport default Notifications;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Message\\Message.js",[],["255","256"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Notification.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\UserComments.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Messages\\Messages.js",["257","258"],"import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\n\nimport Message from \"./Message/Message\";\nimport axios from \"../../axios\";\nimport \"./Messages.css\";\n\nconst Messages = ({ messages, name, room }) => {\n  const [oldMessages, setOldMessages] = useState();\n  useEffect(() => {\n    const fetchData = async () => {\n      const token = localStorage.getItem(\"auth-token\");\n      let req;\n      if (room) {\n        req = await axios.get(\n          `https://chat-litsoc.herokuapp.com/chat/messages/${room}`,\n          {\n            headers: {\n              \"x-auth-token\": token,\n            },\n          }\n        );\n        req.data.map((oldMessage) => {\n          if (oldMessage.username !== name && oldMessage.readStatus === false) {\n            axios.patch(\n              \"https://chat-litsoc.herokuapp.com/chat/message/update\",\n              { secondUser: oldMessage.username, readStatus: true },\n              {\n                headers: {\n                  \"x-auth-token\": token,\n                },\n              }\n            );\n          }\n          messages.push(oldMessage);\n        });\n        setOldMessages(req.data);\n      }\n    };\n    fetchData();\n  }, [room]);\n  if (oldMessages) {\n    return messages.length > 0 ? (\n      <ScrollToBottom className=\"messages\" followButtonClassName=\"scrollButton\">\n        {messages.map((message, i) => (\n          <div key={i}>\n            <Message message={message} name={name} />\n          </div>\n        ))}\n      </ScrollToBottom>\n    ) : (\n      <div className=\"messages\">\n        <h4 className=\"text-light pl-3\">\n          Start the conversation by saying hello!\n        </h4>\n      </div>\n    );\n  } else\n    return (\n      <div className=\"messages\">\n        <h4 className=\"text-light pl-3\">\n          <FontAwesomeIcon icon={faSpinner} spin /> Loading...\n        </h4>\n      </div>\n    );\n};\n\nexport default Messages;\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\SignIn.js",["259"],"import React, { useState, useContext } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport axios from \"../axios\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport ErrorNotice from \"./ErrorNotice\";\r\n\r\nfunction ModalCentered(props) {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { userData, setUserData } = useContext(UserContext);\r\n  const [error, setError] = useState();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const loginUser = {\r\n        password,\r\n        username,\r\n      };\r\n      const loginRes = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/user/login\",\r\n        loginUser\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n    } catch (err) {\r\n      err.response.data.message && setError(err.response.data.message);\r\n      setTimeout(function () {\r\n        setError(undefined);\r\n      }, 5000);\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"md\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header className=\"bg-dark text-light\">\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">Login</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"bg-dark text-light\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Form.Group id=\"loginId\">\r\n                <Form.Label htmlFor=\"inlineFormInputGroup\">Username</Form.Label>\r\n                <InputGroup className=\"mb-2\">\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text className=\"bg-primary text-light\">\r\n                      @\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <FormControl\r\n                    id=\"inlineFormInputGroup\"\r\n                    placeholder=\"Enter Username\"\r\n                    className=\"bg-primary text-light\"\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please enter a valid username.\r\n                  </Form.Control.Feedback>\r\n                </InputGroup>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col xs={12}>\r\n              <Form.Group controlId=\"formGroupPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  className=\"bg-primary text-light\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Invalid username or password.\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Modal.Footer className=\"bg-dark text-light\">\r\n            {error && <ErrorNotice message={error} />}\r\n            <Button variant=\"info\" onClick={props.onHide}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"info\" type=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nfunction SignUp() {\r\n  const [modalShow, setModalShow] = React.useState(false);\r\n  return (\r\n    <Container>\r\n      <Button\r\n        className=\"mt-1 dark w-100 text-center\"\r\n        variant=\"info\"\r\n        onClick={() => setModalShow(true)}\r\n      >\r\n        Login\r\n      </Button>{\" \"}\r\n      <ModalCentered show={modalShow} onHide={() => setModalShow(false)} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateCommentReply.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Settings.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\reportWebVitals.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Followers.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\components\\Player.js",["260","261","262","263","264","265"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faPause,\r\n  faVolumeUp,\r\n  faVolumeMute,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nconst AudioPlayer = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n}) => {\r\n  //Event Handlers\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = async (e) => {\r\n    const dragValue = e.target.value;\r\n    await setSongInfo({ ...songInfo, currTime: dragValue });\r\n    audioRef.current.currentTime = e.target.value;\r\n  };\r\n\r\n  const volDragHandler = (e) => {\r\n    const dragValue = e.target.value / 100;\r\n    audioRef.current.volume = e.target.value / 100;\r\n    setSongInfo({ ...songInfo, volume: dragValue });\r\n  };\r\n  const maxVolHandler = () => {\r\n    audioRef.current.volume = 1;\r\n    setSongInfo({ ...songInfo, volume: 1 });\r\n  };\r\n  const muteVolHandler = () => {\r\n    audioRef.current.volume = 0;\r\n    setSongInfo({ ...songInfo, volume: 0 });\r\n  };\r\n  //Add Styles\r\n  const trackAnimation = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  const volumeSlider = {\r\n    transform: `translateX(${songInfo.volume * 100}%)`,\r\n  };\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <div className=\"play-control\">\r\n          {!isPlaying && (\r\n            <FontAwesomeIcon\r\n              onClick={playSongHandler}\r\n              icon={faPlay}\r\n              size=\"2x\"\r\n              className=\"play\"\r\n            />\r\n          )}\r\n          {isPlaying && (\r\n            <FontAwesomeIcon\r\n              onClick={playSongHandler}\r\n              icon={faPause}\r\n              size=\"2x\"\r\n              className=\"play\"\r\n            />\r\n          )}\r\n          {/* <div className=\"volume-container\">\r\n          <FontAwesomeIcon\r\n            icon={faVolumeMute}\r\n            size=\"2x\"\r\n            className=\"volumeMute\"\r\n            onClick={muteVolHandler}\r\n          />\r\n          <div\r\n            style={{\r\n              background: \"linear-gradient(to right,#B7C1EB,#084DA6)\",\r\n            }}\r\n            className=\"track volumeSlider\"\r\n          >\r\n            <input\r\n              value={songInfo.volume}\r\n              onChange={volDragHandler}\r\n              type=\"range\"\r\n            />\r\n            <div\r\n              style={volumeSlider}\r\n              className=\"animate-track animate-volumeSlider\"\r\n            ></div>\r\n          </div>\r\n          <FontAwesomeIcon\r\n            icon={faVolumeUp}\r\n            size=\"2x\"\r\n            className=\"volumeUp\"\r\n            onClick={maxVolHandler}\r\n          />\r\n        </div> */}\r\n        </div>\r\n        <p className=\"mb-0\">{getTime(songInfo.currTime)}</p>\r\n        <div\r\n          style={{\r\n            background: \"linear-gradient(to right,#0FA697,#042026)\",\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n          />\r\n          <div style={trackAnimation} className=\"animate-track\"></div>\r\n        </div>\r\n        <p className=\"mb-0\">\r\n          {songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioPlayer;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\AudioPlayer\\MyAudioPlayer.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SignUp.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\CreateComment.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Post.js",["266","267"],"C:\\Users\\shash\\front_bootstrap\\src\\components\\SponsoredPost.js",[],"C:\\Users\\shash\\front_bootstrap\\src\\components\\Posts.js",["268"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport axios from \"../axios\";\r\nimport UserContext from \".././context/UserContext\";\r\nimport Post from \"./Post\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Container } from \"react-bootstrap\";\r\nconst Posts = (props) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const postsNo = 3;\r\n  const [hasMorePosts, setHasMorePosts] = useState(false);\r\n  const [page, setPage] = useState(0);\r\n  const [searchResults, setSearchResults] = useState(true);\r\n  const { userData } = useContext(UserContext);\r\n  const fetchData = async () => {\r\n    setSearchResults(true);\r\n    let url;\r\n    let req = await axios.post(\r\n      \"https://app-litsoc.herokuapp.com/post/simplerecommender?category=All\",\r\n      {\r\n        page: page,\r\n        size: postsNo,\r\n      }\r\n    );\r\n    setPage(0);\r\n    if (props.myProfile && userData.user) {\r\n      setPage(0);\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${userData.user.id}`;\r\n      req = await axios.post(url, { page: page, size: postsNo });\r\n      if (req.data.msg === \"No Results\" || req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.secondUserProfile) {\r\n      setPage(0);\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${props.secondUserId.id}`;\r\n      req = await axios.post(url, { page: page, size: postsNo });\r\n      if (\r\n        props.secondUserId.id &&\r\n        (req.data.msg === \"No Results\" || req.data.posts.length < 1)\r\n      ) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (!props.searchKeyword && props.category && !props.genre) {\r\n      setPage(0);\r\n      req = await axios.post(\r\n        `https://app-litsoc.herokuapp.com/post/simplerecommender?category=${\r\n          props.category ? props.category : \"All\"\r\n        }`,\r\n        { page: page, size: postsNo }\r\n      );\r\n      if (req.data.msg === \"No Results\" || req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.searchKeyword || props.category || props.genre) {\r\n      setPage(0);\r\n      req = await axios.post(\r\n        `https://app-litsoc.herokuapp.com/post/all/search?keyword=${\r\n          props.searchKeyword ? props.searchKeyword : \"\"\r\n        }&category=${props.category ? props.category : \"\"}&genres=${\r\n          props.genre ? props.genre : \"\"\r\n        }`,\r\n        { page: page, size: postsNo }\r\n      );\r\n      if (req.data.msg === \"No Results\" || req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.subscription) {\r\n      setPage(0);\r\n      req = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/post/subscriptions\",\r\n        {\r\n          page: page,\r\n          size: postsNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": userData.token,\r\n          },\r\n        }\r\n      );\r\n      if (!req.data.hasNext && req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    } else if (props.feed) {\r\n      setPage(0);\r\n      req = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/post/collaborativerecommender\",\r\n        {\r\n          page: page,\r\n          size: postsNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": userData.token,\r\n          },\r\n        }\r\n      );\r\n      if (!req.data.hasNext && req.data.posts.length < 1) {\r\n        setSearchResults(false);\r\n      }\r\n    }\r\n    setHasMorePosts(req.data.hasNext);\r\n    setPosts(req.data.posts);\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [\r\n    props.feed,\r\n    props.subscription,\r\n    props.myProfile,\r\n    props.secondUserId,\r\n    props.secondUserProfile,\r\n    userData.user,\r\n    props.searchKeyword,\r\n    props.category,\r\n    props.genre,\r\n  ]);\r\n  const fetchMoreData = async () => {\r\n    const tempPage = page + 1;\r\n    setPage((prevPage) => prevPage + 1);\r\n    let url;\r\n    let res = await axios.post(\r\n      \"https://app-litsoc.herokuapp.com/post/simplerecommender?category=All\",\r\n      {\r\n        page: tempPage,\r\n        size: postsNo,\r\n      }\r\n    );\r\n    if (props.myProfile && userData.user) {\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${userData.user.id}`;\r\n      res = await axios.post(url, { page: tempPage, size: postsNo });\r\n    } else if (props.secondUserProfile) {\r\n      url = `https://app-litsoc.herokuapp.com/post/all/${props.secondUserId.id}`;\r\n      res = await axios.post(url, { page: tempPage, size: postsNo });\r\n    } else if (!props.searchKeyword && props.category && !props.genre) {\r\n      res = await axios.post(\r\n        `https://app-litsoc.herokuapp.com/post/simplerecommender?category=${\r\n          props.category ? props.category : \"All\"\r\n        }`,\r\n        { page: tempPage, size: postsNo }\r\n      );\r\n    } else if (props.searchKeyword || props.category || props.genre) {\r\n      res = await axios.post(\r\n        `https://app-litsoc.herokuapp.com/post/all/search?keyword=${\r\n          props.searchKeyword ? props.searchKeyword : \"\"\r\n        }&category=${props.category ? props.category : \"\"}&genres=${\r\n          props.genre ? props.genre : \"\"\r\n        }`,\r\n        { page: tempPage, size: postsNo }\r\n      );\r\n    } else if (props.subscription) {\r\n      res = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/post/subscriptions\",\r\n        {\r\n          page: tempPage,\r\n          size: postsNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": userData.token,\r\n          },\r\n        }\r\n      );\r\n    } else if (props.feed) {\r\n      res = await axios.post(\r\n        \"https://app-litsoc.herokuapp.com/post/collaborativerecommender\",\r\n        {\r\n          page: tempPage,\r\n          size: postsNo,\r\n        },\r\n        {\r\n          headers: {\r\n            \"x-auth-token\": userData.token,\r\n          },\r\n        }\r\n      );\r\n    }\r\n    setHasMorePosts(res.data.hasNext);\r\n    setPosts((prevPosts) => {\r\n      return prevPosts.concat(res.data.posts);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={posts.length} //This is important field to render the next data\r\n      next={fetchMoreData}\r\n      hasMore={hasMorePosts}\r\n      loader={\"Loading More Posts...\"}\r\n    >\r\n      {searchResults ? (\r\n        posts.length > 0 ? (\r\n          posts.map((post) => <Post post={post} myProfile={props.myProfile} />)\r\n        ) : (\r\n          <Container\r\n            className=\"my-3 py-md-2 rounded bg-dark shadow-lg text-light\"\r\n            fluid={1}\r\n          >\r\n            <h4>\r\n              <FontAwesomeIcon icon={faSpinner} spin />\r\n              Loading\r\n            </h4>\r\n          </Container>\r\n        )\r\n      ) : (\r\n        <Container\r\n          className=\"my-3 py-md-2 rounded bg-dark shadow-lg text-light\"\r\n          fluid={1}\r\n        >\r\n          <h2>No Results</h2>\r\n        </Container>\r\n      )}\r\n    </InfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\Poems.js",["269"],"import SwipeDrawer from \"../SwipeDrawer\";\r\n// import bg from \"../photos/Endless-Constellation2.svg\";\r\nimport bg from \"../photos/video.mp4\";\r\nimport { useState } from \"react\";\r\n\r\nconst Poems = () => {\r\n  const [category, setCategory] = useState(\"Poem\");\r\n  return (\r\n    <div\r\n      style={{\r\n        //   backgroundAttachment: \"fixed\",\r\n        //   backgroundImage: `url(${bg})`,\r\n        backgroundColor: \"#16161A\",\r\n      }}\r\n    >\r\n      {/* <video\r\n        autoPlay\r\n        muted\r\n        loop\r\n        style={{\r\n          position: \"fixed\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          objectFit: \"cover\",\r\n          transform: \"translate(-50%,-50%)\",\r\n        }}\r\n      >\r\n        <source src={bg} type=\"video/mp4\" />\r\n      </video> */}\r\n      <SwipeDrawer\r\n        isFalse={0}\r\n        defValue={4}\r\n        category={category}\r\n        setCategory={setCategory}\r\n        showSearch={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Poems;\r\n","C:\\Users\\shash\\front_bootstrap\\src\\components\\ScrollToTop.js",[],{"ruleId":"270","severity":1,"message":"271","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":10},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"270","severity":1,"message":"278","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":18},{"ruleId":"270","severity":1,"message":"271","line":16,"column":8,"nodeType":"272","messageId":"273","endLine":16,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":10},{"ruleId":"270","severity":1,"message":"279","line":24,"column":11,"nodeType":"272","messageId":"273","endLine":24,"endColumn":19},{"ruleId":"274","replacedBy":"280"},{"ruleId":"276","replacedBy":"281"},{"ruleId":"270","severity":1,"message":"271","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":10},{"ruleId":"270","severity":1,"message":"282","line":12,"column":10,"nodeType":"272","messageId":"273","endLine":12,"endColumn":14},{"ruleId":"270","severity":1,"message":"283","line":12,"column":16,"nodeType":"272","messageId":"273","endLine":12,"endColumn":23},{"ruleId":"274","replacedBy":"284"},{"ruleId":"276","replacedBy":"285"},{"ruleId":"270","severity":1,"message":"271","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":10},{"ruleId":"274","replacedBy":"286"},{"ruleId":"276","replacedBy":"287"},{"ruleId":"270","severity":1,"message":"288","line":1,"column":38,"nodeType":"272","messageId":"273","endLine":1,"endColumn":48},{"ruleId":"289","severity":1,"message":"290","line":21,"column":6,"nodeType":"291","endLine":21,"endColumn":8,"suggestions":"292"},{"ruleId":"274","replacedBy":"293"},{"ruleId":"276","replacedBy":"294"},{"ruleId":"274","replacedBy":"295"},{"ruleId":"276","replacedBy":"296"},{"ruleId":"270","severity":1,"message":"278","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"297","line":3,"column":10,"nodeType":"272","messageId":"273","endLine":3,"endColumn":19},{"ruleId":"270","severity":1,"message":"298","line":3,"column":21,"nodeType":"272","messageId":"273","endLine":3,"endColumn":27},{"ruleId":"270","severity":1,"message":"299","line":5,"column":10,"nodeType":"272","messageId":"273","endLine":5,"endColumn":17},{"ruleId":"270","severity":1,"message":"300","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":25},{"ruleId":"270","severity":1,"message":"301","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":26},{"ruleId":"274","replacedBy":"302"},{"ruleId":"276","replacedBy":"303"},{"ruleId":"274","replacedBy":"304"},{"ruleId":"276","replacedBy":"305"},{"ruleId":"270","severity":1,"message":"271","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":10},{"ruleId":"270","severity":1,"message":"271","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":10},{"ruleId":"270","severity":1,"message":"306","line":21,"column":17,"nodeType":"272","messageId":"273","endLine":21,"endColumn":25},{"ruleId":"274","replacedBy":"307"},{"ruleId":"276","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":25,"column":35,"nodeType":"311","messageId":"312","endLine":25,"endColumn":37},{"ruleId":"289","severity":1,"message":"313","line":43,"column":6,"nodeType":"291","endLine":43,"endColumn":12,"suggestions":"314"},{"ruleId":"270","severity":1,"message":"279","line":15,"column":11,"nodeType":"272","messageId":"273","endLine":15,"endColumn":19},{"ruleId":"270","severity":1,"message":"315","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":13},{"ruleId":"270","severity":1,"message":"316","line":7,"column":3,"nodeType":"272","messageId":"273","endLine":7,"endColumn":15},{"ruleId":"270","severity":1,"message":"317","line":39,"column":9,"nodeType":"272","messageId":"273","endLine":39,"endColumn":23},{"ruleId":"270","severity":1,"message":"318","line":44,"column":9,"nodeType":"272","messageId":"273","endLine":44,"endColumn":22},{"ruleId":"270","severity":1,"message":"319","line":48,"column":9,"nodeType":"272","messageId":"273","endLine":48,"endColumn":23},{"ruleId":"270","severity":1,"message":"320","line":56,"column":9,"nodeType":"272","messageId":"273","endLine":56,"endColumn":21},{"ruleId":"270","severity":1,"message":"321","line":28,"column":10,"nodeType":"272","messageId":"273","endLine":28,"endColumn":17},{"ruleId":"270","severity":1,"message":"322","line":28,"column":19,"nodeType":"272","messageId":"273","endLine":28,"endColumn":29},{"ruleId":"289","severity":1,"message":"323","line":108,"column":6,"nodeType":"291","endLine":118,"endColumn":4,"suggestions":"324"},{"ruleId":"270","severity":1,"message":"271","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":10},"no-unused-vars","'bg' is defined but never used.","Identifier","unusedVar","no-native-reassign",["325"],"no-negated-in-lhs",["326"],"'Typography' is defined but never used.","'userData' is assigned a value but never used.",["325"],["326"],"'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.",["325"],["326"],["325"],["326"],"'useContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["327"],["325"],["326"],["325"],["326"],"'Accordion' is defined but never used.","'Button' is defined but never used.","'faReply' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'CreateCommentReply' is defined but never used.",["325"],["326"],["325"],["326"],"'setValue' is assigned a value but never used.",["325"],["326"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'messages' and 'name'. Either include them or remove the dependency array.",["328"],"'faVolumeUp' is defined but never used.","'faVolumeMute' is defined but never used.","'volDragHandler' is assigned a value but never used.","'maxVolHandler' is assigned a value but never used.","'muteVolHandler' is assigned a value but never used.","'volumeSlider' is assigned a value but never used.","'canPlay' is assigned a value but never used.","'setCanPlay' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["329"],"no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},"Update the dependencies array to be: [postId]",{"range":"336","text":"337"},"Update the dependencies array to be: [messages, name, room]",{"range":"338","text":"339"},"Update the dependencies array to be: [props.feed, props.subscription, props.myProfile, props.secondUserId, props.secondUserProfile, userData.user, props.searchKeyword, props.category, props.genre, fetchData]",{"range":"340","text":"341"},[788,790],"[postId]",[1342,1348],"[messages, name, room]",[3689,3899],"[props.feed, props.subscription, props.myProfile, props.secondUserId, props.secondUserProfile, userData.user, props.searchKeyword, props.category, props.genre, fetchData]"]